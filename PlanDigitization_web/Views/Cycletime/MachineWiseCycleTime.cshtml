
@{ ViewBag.Title = "Paretoanalysis";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
<style>
    svg {
        font: 10px sans-serif;
        height: 900 !important;
    }

    .bar rect {
        fill: steelblue;
        shape-rendering: crispEdges;
    }

    .axis path, .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .line {
        fill: none;
        stroke: purple;
        stroke-width: 1.5px;
    }

    .btn-group.select-btn {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        right: 16px;
        position: absolute;
    }

        .btn-group.select-btn select {
            height: unset;
            padding: 5px;
        }

        .btn-group.select-btn label {
            margin: 0 8px 0 0;
            font-family: verdana;
            color: #47640a;
        }
</style>
<link rel="stylesheet" type="text/css" href="~/assets1/datepicker_normal/jquery-ui-1.8.19.custom.css">
<header class="page-header">
    <h2>MachineWise CycleTime</h2>
    <div class="right-wrapper pull-right">
        <ol class="breadcrumbs">
            <li>
                <a href="@Url.Action("MainDashboard","MainDashboard")">
                    <i class="fa fa-home"></i>
                </a>
            </li>

        </ol>
    </div>
</header>
@if (ViewContext.Controller.HasPermission("MachineWiseCycleTime-View"))
{


    <div class="row">
        <div class="col-md-12">
            <div id="custom" class="tab-pane active">
                <section class="panel">


                    <div class="panel-body ">
                        <div class="form-group ">
                            <label class="col-md-1 control-label">Date range</label>
                            <div class="col-md-6">
                                <div class="input-daterange input-group">
                                    <span class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </span>
                                    <input type="text" class="form-control datepic" style="text-align:left;z-index:0;" id="start" name="start" readonly>
                                    <span class="input-group-addon">to</span>
                                    <input type="text" class="form-control datepic" style="text-align:left;z-index:0;" id="end" name="end" readonly>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="btn-group">
                                    <button type="button" id="searchcustomwise" class="mb-xs mt-xs mr-xs btn btn-primary">View</button>
                                </div>
                                <div class="btn-group">
                                    <button type="button" id="resetcustom" class="mb-xs mt-xs mr-xs btn btn-danger">Reset</button>
                                </div>
                            </div>
                        </div>

                        <div class='custome_report ' style="height: 500px; width: 100%; background-color: rgb(91 165 241 / 10%);">

                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div> }
else
{
    <div class="row">
        <h2 class="panel-title">View Permission is denied</h2>
    </div>}
<!-- end: page -->
<script src="~/assets1/javascripts/swal.js"></script>
<script src="~/assets1/javascripts/swal_alert.js"></script>
<script src="~/assets1/datepicker_normal/datepicker_normal_jquery.min.js"></script>
<script src="~/assets1/datepicker_normal/jquery-ui-1.8.19.custom.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>
<script src="~/Scripts/d3_v3.min.js"></script>
<script type="text/javascript">
    $(".datepic").datepicker({
        format: "yyyy-mm-dd",
        orientation: "bottom",
        endDate: '+0d'
    });

    $('.month-own').datepicker({
        format: "yyyy-mm",
        viewMode: "months",
        endDate: '+0m',
        minViewMode: "months",
        orientation: "bottom"
    });
    $('.date-own').datepicker({
        minViewMode: 2,
        format: 'yyyy',
        endDate: '+0y',
        startView: 2,
        orientation: "bottom"
    });
</script>
<script>
    $(function () {
        var todaydt = new Date();
        $("#start").datepicker({
            autoclose: true,
            endDate: todaydt,
            format: 'yyyy-mm-dd'
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            minDate.setDate(minDate.getDate());
            $('#end').datepicker('setStartDate', minDate);
        });

        $("#end").datepicker({
            autoclose: true,
            endDate: todaydt,
            format: 'yyyy-mm-dd'
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            minDate.setDate(minDate.getDate() - 1);
            $('#start').datepicker('setEndDate', minDate);
        });
    });

    $(function () {
        $('#start').keypress(function (event) {
            event.preventDefault();
            return false;
        });
    });

    $(function () {
        $('#end').keypress(function (event) {
            event.preventDefault();
            return false;
        });
    });

</script>

<script type="text/javascript">
    $(function () {
        var CompanyCode = '@Session["CompanyCode"]';
        var PlantCode = '@Session["PlantCode"]';
        var LineCode = '@Session["LineCode"]';
        if (CompanyCode == "" && PlantCode == "" && LineCode == "") {
            swal({
                icon: "error",
                title: "Please Select Customer, Plant and Line...!",
                button: true,
                timer: 4500
            })
            return;
        }
        else
            if (CompanyCode == "") {
                swal({
                    icon: "error",
                    title: "Please Select Customer...!",
                    button: true,
                    timer: 4500
                })
                return;
            }
            else
                if (PlantCode == "") {
                    swal({
                        icon: "error",
                        title: "Please Select Plant...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (LineCode == "") {
                    swal({
                        icon: "error",
                        title: "Please Select Line...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                else {
                    var URL = '@System.Configuration.ConfigurationManager.AppSettings["url"]';



                      var myData1 = {
                        "Flag": "Subsystem",
                        "CompanyCode": '@Session["CompanyCode"]',
                        "PlantCode": '@Session["PlantCode"]',
                        "LineCode":'@Session["LineCode"]'
                    };
                     var R_url = '@Url.Action("Login", "Main")';
                   var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';

                     var R_url = '@Url.Action("GetSettingdatas1", "Main")';
                    @*var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';*@
                       var URL2 = '@Url.Action("GetSettingdatas1", "Main")';



                }

    });

    document.getElementById("resetcustom").addEventListener("click", function () {
        $('#start').val('');
        $('#end').val('');
        d3.select(".custome_report svg").remove();
        d3.select(".custome_Duration svg").remove();
    })
    document.getElementById("resetyear").addEventListener("click", function () {
        $('#year').val('');
        d3.select(".year_report svg").remove();
        d3.select(".year_Duration svg").remove();
    })
    document.getElementById("resetmonth").addEventListener("click", function () {
        $('#month').val('');
        d3.select(".monthly_report svg").remove();
        d3.select(".monthly_Duration svg").remove();
    })


</script>




<script type="text/javascript">

    var URL = '@System.Configuration.ConfigurationManager.AppSettings["url"]';


    function graph(id, response) {

        const a = $(id).height();
        const b = $(id).width();
        var m = { top: 80, right: 70, bottom: 150, left: 70 }
            , h = a - m.top - m.bottom
            , w = b - m.left - m.right
            , barWidth = 5;

        var dataset = null;
        //typecast Amount to #, calculate total, and cumulative amounts
        dataset = response.data;


        //Axes and scales
        var xScale = d3.scale.ordinal().rangeRoundBands([0, w], 0.1);

        xScale.domain(dataset.map(function (d) { return d.MachineCode; }));

        var yhist = d3.scale.linear()
            .domain([0, d3.max(dataset, function (d) { return d.AverageCT; })])
            .range([h, 0]);



        var xAxis = d3.svg.axis()
            .scale(xScale)
            .orient('bottom');

        var yAxis = d3.svg.axis()
            .scale(yhist)
            .orient('left');



        var tooltip = d3.select(id)
            .append("div")
            .style("opacity", 0)
            .attr("class", "tooltip")
            .style("background-color", "tranparent")
            .style("border", "solid")
            .style("border-width", "2px")
            .style("border-radius", "5px")
            .style("padding", "5px")

        tooltip = d3.select("body").append("div").style("width", "200px").style("height", "70px").style("background", "white")
            .style("opacity", "1").style("position", "absolute").style("visibility", "hidden").style("padding", "5px");
        toolval = tooltip.append("div");


        //Draw svg
        var svg = d3.select(id).append("svg")
            .attr("width", w + m.left + m.right)
            .attr("height", h + m.top + m.bottom)
            .append("g")
            .attr("transform", "translate(" + m.left + "," + m.top + ")");

        //Draw histogram
        var bar = svg.selectAll(".bar")
            .data(response.data)
            .enter().append("g")
            .attr("class", "bar");

        //bar.append("rect")
        //    .attr("x", function (d) { return xScale(d.Alarm_Description); })
        //    .attr("width", xScale.rangeBand())
        //    .attr("y", function (d) { return yhist(d.Frequency); })
        //    .attr("height", function (d) { return h - yhist(d.Frequency); });

        bar.append("rect")
            .attr("x", function (d) { return xScale(d.MachineCode); })
            .attr("width", xScale.rangeBand())
            .attr("y", function (d) { return yhist(d.AverageCT); })
            .attr("height", function (d) { return h - yhist(d.AverageCT); })


            .on("mouseout", function () {
                d3.select(this).style("stroke", "none");
                tooltip.style("visibility", "hidden");
            })

            .on("mousemove", function (d) {
                tooltip.style("visibility", "visible")
                    .style("top", (d3.event.pageY - 30) + "px").style("left", (d3.event.pageX + 20) + "px");

                var text = 'Average Cycle Time: ' + Math.round((d.AverageCT + Number.EPSILON) * 100) / 100 +  'Sec <br/> Machine Name: ' + d.MachineCode + '';

                tooltip.select("div").html(text)

            })





        bar.append('text')
            .attr('class', 'value')
            .attr('x', function (d) { return (xScale(d.MachineCode) + (xScale.rangeBand()) / 2); })
            .attr('y', function (d) { return yhist(d.AverageCT) - 10 })
            .attr('text-anchor', 'middle')
            .style('fill', 'gray')
            .text(function (d) { return Math.round((d.AverageCT + Number.EPSILON) * 100) / 100 })




        //Draw axes
        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + h + ")")
            .call(xAxis)
            .append("text")
            .attr("y", 50)
            .attr("x",550)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .style("font-family", "Arial, Helvetica, sans-serif")
            .style("font-size", "16px")
            .text("Machine");





        svg.append("g")
            .attr("class", "y axis")
            .call(yAxis)
            .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", -60)
            .attr("x", -50)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .style("font-family", "Arial, Helvetica, sans-serif")
            .style("font-size", "16px")
            .text("Average Cycle Time");




    }
    document.getElementById("searchcustomwise").addEventListener("click", function () {

        var linecode = '@Session["LineCode"]';
        var records = $('.record').val();
        var start = $('#start').val();
        var end = $('#end').val();
        $('.updated_time').text(new Date().toLocaleString());
        $('.shift').text("N/A");

        var syear = start.substr(0, 4);
        var eyear = end.substr(0, 4);
        if (syear != eyear && end!='') {
            swal({
                icon: "error",
                title: "Please Select Same Year for Fromdate and Todate...!",
                button: false,
                timer: 4500
            })
            d3.select("svg").remove();
            return;
        }


        if (linecode == '') {
            swal({
                icon: "error",
                title: "Please Provide Line details",
                button: false,
                timer: 4500
            })
        }

        else if (start == '') {
            swal({
                icon: "error",
                title: "Please Provide start date",
                button: false,
                timer: 4500
            })
        }
        else if (end == '') {
            swal({
                icon: "error",
                title: "Please Provide End date",
                button: false,
                timer: 4500
            })
        }
        else {
            if (start > end) {
                swal({
                    icon: "error",
                    title: "Please Provide Dates correctly...",
                    button: false,
                    timer: 4500
                })
            }

            var myData = {
                "Line": linecode,
                "records": records,
                "FDate": start,
                "TDate": end,
                "CompanyCode": '@Session["CompanyCode"]',
                "PlantCode": '@Session["PlantCode"]'

            };
            var sample;
            var R_url = '@Url.Action("Login", "Main")';
            var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';


             $.ajax({
                type: "POST",
                 url: URL + 'api/Cycletime/GetDataGroup',
                headers: {
                    Authorization: 'Bearer ' + user1
                },
                data: myData,
                dataType: "json",
                beforeSend: function () {
                    $('.loading').show();
                },
                complete: function () {
                    $('.loading').hide();
                },
                success: function (response) {
                    d3.select(".custome_report svg").remove();
                    if (response.status != "Error") {
                        /* $('#custom_line').text(linecode);*/
                        //console.log(response);


                       graph(".custome_report", response);
                    }
                    else {
                        sample = "";
                        $(".custome_report").empty();

                        var div_width = 400;
                        var div_height = 400;
                        var svg = d3.select(".custome_report").append("svg")
                            .attr("width", div_width)
                            .attr("height", div_height)
                            .attr("preserveAspectRatio", "xMidYMid")
                            .append("g")
                            .attr("transform", "translate(" + (div_width / 2 - 50) + "," + (div_height / 2 - 50) + ")");

                        svg.append("text")
                            .text("No Data Available")
                            .style("font-size", "40px");
                    }

                },
                error: function (response) {
                    if (response.status == "401") {
                        swal({
                            icon: "warning",
                            title: "Session Timeout",
                            button: true,
                            closeModal: false
                        })
                        window.location = R_url;
                    }
                    else {
                        swal({
                            icon: "warning",
                            title: response.responseText,
                            button: true,
                            closeModal: false
                        })

                    }
                }
             });





        }

    })








</script>



