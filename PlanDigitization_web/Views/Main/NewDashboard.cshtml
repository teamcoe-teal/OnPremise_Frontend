
@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .grid {
        display: grid;
        grid-template-columns: repeat(8, 1fr);
        grid-auto-rows: auto;
        grid-gap: 6px;
    }

    
    /*.half-donut .label {
      font-size: 3rem;
    }*/

    .itemgrid {
        display: grid;
        grid-template-columns: repeat(8, 1fr);
        grid-auto-rows: auto;
        grid-gap: 10px;
        text-align: center;
    }

    .box {
        width: auto;
        height: auto;
    }

    .red {
        background: red;
    }

    .yellow {
        background: yellow;
    }

    .grey {
        background: grey;
    }

    .green {
        background: green;
    }

    .blue {
        background: blue;
    }

    .lightgray {
        background: #D3D3D3;
    }

    .flex-container {
        float: left;
        /*display: flex;
        flex-wrap: nowrap;
        overflow: auto;
        overflow-x: scroll;
        overflow-y: hidden;*/
    }


    div.image {
        align-content: center;
        width: auto; /*width of your image*/
        height: 180px; /*height of your image*/
        background-image: url('../../assets1/map.png');
        background-repeat: no-repeat;
        margin: 0; /* If you want no margin */
        padding: 0; /*if your want to padding */
    }
</style>
<header class="page-header">
    <h2><span id="plantcode"></span></h2>
</header>



@if (((HttpContext.Current.Session["CompanyCode"] != null) && (HttpContext.Current.Session["PlantCode"] != "") && (HttpContext.Current.Session["PlantCode"] != null)))
{
   
    <div class='col-md-12 col-xl-12' style="background-color:#DBE3E6">
        <section class='panel'>
            <header class='panel-heading' style="border-style:solid;border-width:thin;border-color:black;text-align:center;background-color:teal;color:white">

                <span class="glyphicon glyphicon-chevron-left prev" id="prev_button" style="float:left;" title="Previous"></span>
                <span class="glyphicon glyphicon-chevron-right next" id="next_button" style="float:right;" title="Next"></span>
                <span id="line_heading" style="float:left;padding-left:2%;"></span>
                <span id="linetype" style="float:right;padding-right:2%;"></span>
                <label style="font-weight:bold;text-align:center;font-size:medium;font-weight:lighter;font-size-adjust:inherit">LINE: <span class=" itemname" id="linenamee"></span></label>
            </header>
            

         
            <div class='col-sm-12 col-md-12 col-lg-12'>
                <div class='col-sm-3 col-md-3 col-lg-3' style='align-content:center;padding-top:2px;'>
                   
                    <svg class="chart" id="chartid" style="align-content:center;"></svg>


                </div>
                <div class='col-sm-3 col-md-3 col-lg-3' style='align-content:center;padding-top:2px;'>
                  
                    <svg class="chart1" id="chartid1" style="align-content:center;"></svg>


                </div>
                <div class='col-sm-3 col-md-3 col-lg-3' style='align-content:center;padding-top:2px;'>
                    
                    <svg class="chart2" id="chartid2" style="align-content:center;"></svg>


                </div>
                <div class='col-sm-3 col-md-3 col-lg-3' style='align-content:center;padding-top:2px;'>
                   
                    <svg class="chart3" id="chartid3" style="align-content:center;"></svg>


                </div>

            </div>

            <div class='col-sm-12 col-md-12 col-lg-12' style="padding-top:5%;">
                <div class='col-sm-4 col-md-4 col-lg-4'>
                    <svg class="time1" width="300" height="200"> </svg>
                </div>
                <div class='col-sm-4 col-md-4 col-lg-4' style="text-align:center;">
                    <header style='border-style:solid;border-width:thin;border-color:black;text-align:center;background-color:teal;color:white;'>
                        Variant Details

                    </header>

                    <br />
                    <div class="">
                        <button type="button" class="mb-xs mt-xs mr-xs btn btn-sm btn-default" style="width:100%;background-color:#e5591a;color:white;float:left;"><span id="variant"></span></button><br />
                        <button type="button" class="mb-xs mt-xs mr-xs btn btn-sm btn-default" style="width:100%;background-color:#e5591a;color:white;float:left;">Total Parts Produced:  <span id="totalok"></span></button><br />
                        <button type="button" class="mb-xs mt-xs mr-xs btn btn-sm btn-default" style="width:100%;background-color:#e5591a;color:white;float:left;">Total Parts Rejected:  <span id="totalnok"></span></button>

                    </div>

                </div>
                <div class='col-sm-4 col-md-4 col-lg-4' style="text-align:center;">
                    <header style='border-style:solid;border-width:thin;border-color:black;text-align:center;background-color:teal;color:white;'>
                        Machines
                        <div id="tooltip1">
                            <span class="glyphicon glyphicon-info-sign gi-8x">

                            </span>
                            <table class="tooltiptext">
                                <thead>

                                </thead>
                                <tbody>
                                    <tr>
                                        <td><input type="button" class="small" style="border-style:solid;border-width:thin;border-color:black;height:9px;width:8px;background-color:red;" /></td>
                                        <td style="float:left;">M/c Stopped</td>
                                    </tr>
                                    <tr>
                                        <td><input type="button" class="small" style="border-style:solid;border-width:thin;border-color:black;height:9px;width:8px;background-color:green;" /></td>
                                        <td style="float:left;">M/c Running</td>
                                    </tr>
                                    <tr>
                                        <td><input type="button" class="small" style="border-style: solid;border-width: thin;border-color: black;height: 9px;width: 8px;background-color: yellow;" /></td>
                                        <td style="float:left;">M/c Waiting</td>
                                    </tr>
                                    <tr>
                                        <td><input type="button" class="small" style="border-style: solid;border-width: thin;border-color: black;height: 9px;width: 8px;background-color: grey;" /></td>
                                        <td style="float:left;">M/c Break</td>
                                    </tr>
                                    <tr>
                                        <td><input type="button" class="small" style="border-style: solid;border-width: thin;border-color: black;height: 9px;width: 8px;background-color: blue;" /></td>
                                        <td style="float:left;">M/c not Running</td>
                                    </tr>

                                </tbody>
                            </table>
                        </div>
                    </header>

                    <br />
                    <div class="col-sm-12 col-md-12 col-lg-12" style='padding-top:1%;padding-bottom:1%;border-style:solid;border-width:thin;border-color:black;align-content:center'>

                        <div class='grid machinecount'>

                        </div>
                    </div>

                </div>


            </div>

        </section>
    </div>
    @*<script src="~/Scripts/d3.v4.js"></script>
        <script src="~/Scripts/d3-scale-chromatic.js"></script>*@
    @*<script src="https://d3js.org/d3.v4.js"></script>
        <script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>*@

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    <script>
    var linename = ''
     var shift_prev = '';
        var linenameS = '';
        var performanceS = '';
        var tokS = '';
    var URL = '@System.Configuration.ConfigurationManager.AppSettings["signalr_url"]';


    $(document).ready(function () {

        getData();
        //sendsms();


    });

    function getData() {

        //$(".itemname").html('');

            var list = [];
            var myData = {
                "CompanyCode": '@Session["CompanyCode"]',
                "PlantCode": '@Session["PlantCode"]',
                "Line_Code" : '',
        };
       var R_url = '@Url.Action("Login", "Main")';
        var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';

            //$.ajax({
            //    type: 'Post',
            //    url: URL + 'api/OEE/GetEmployee',
            //    headers: {
            //        Authorization: 'Bearer ' + user1
            //    },
            //    dataType: 'json'
            //}).success(function (response) {
            $.ajax({
                type: 'POST',
                url: URL + 'api/OEE/GetLineOEE',
                headers: {
                    Authorization: 'Bearer ' + user1
                },
                data: myData,
                dataType: 'json'
            }).success(function (response) {

                //$("#lineitem").html('');

                //var t = "Welcome to "+response.data[0].CompanyCode+"";
                ////$('#tex').val(t);
                //$('#tex').val(t);
                 $(".prev").hide();

                var t = "Welcome to Plant-Digitization Portal";

                $('#tex').text(t);


                var t0 = ""+response.data[0].PlantCode+" - Dashboard";
                //$('#plantcode').val(t0);
                $('#plantcode').text(t0);


                for (i = 0; i < response.data.length; i++) {
                    list.push(response.data[i].Line_Code);
                    //list.push("W5K");
                    //list.push("W5K");
                }
                linename = list[0];
                getlineitems();

                 document.getElementById('prev_button').addEventListener(
                    'click', // we want to listen for a click
                     function (e) { // the e here is the event itself
                         var linename = prevItem();
                         getline();
                         //getdataonclick();
                    }
                );

                document.getElementById('next_button').addEventListener(
                    'click', // we want to listen for a click
                    function (e) { // the e here is the event itself
                        var linename = nextItem();
                        getline();
                        //getdataonclick();
                    }
                );

                var j = 0;

                function nextItem() {
                    //alert(list.length);

                    j = j + 1; // increase i by one
                    //j = j % list.length; // if we've gone too high, start from `0` again

                    //return list[j]; // give us back the item of where we are now

                    if (j > list.length-1) {
                        $(".next").hide();
                        return false;
                    }
                    else {
                        $(".prev").show();
                        linename = list[j];
                          return list[j];

                    }


                }
                function prevItem() {
                    //alert("pre")
                    //if (j === 0) { // i would become 0
                    //    j = list.length; // so put it at the other end of the array
                    //}
                    //j = j - 1; // decrease by one
                    //linename = list[j];
                    //return list[j]; // give us back the item of where we are now

                    if (j ==0) {
                        $(".prev").hide();
                        return false;
                    }
                    else {
                        j = j - 1;
                         $(".next").show();
                        linename = list[j];
                        return list[j]; // give us back the item of where we are now

                    }


                }



            }).error(function (response) {
                if (response.status == "401") {
                    swal({
                        icon: "warning",
                        title: "Session Timeout",
                        button: true,
                        closeModal: false
                    })
                    window.location = R_url;
                }
                else {
                    swal({
                        icon: "warning",
                        title: response.responseText,
                        button: true,
                        closeModal: false
                    })

                }
            });
             //}).error(function (response) {
             //    swal({
             //        icon: "warning",
             //        title: "Session Timeout",
             //        button: true,
             //        closeModal: false
             //    })
             //    window.location = R_url;
             //});
            // setTimeout(getData, 10000);
             }




        function getline() {

            var myData = {
                "CompanyCode": '@Session["CompanyCode"]',
                "PlantCode": '@Session["PlantCode"]',
                "Line_Code": linename,
            };
            var R_url = '@Url.Action("Login", "Main")';
            var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';
            //$.ajax({
            //    type: 'Post',
            //    url: URL + 'api/OEE/GetEmployee',
            //    headers: {
            //        Authorization: 'Bearer ' + user1
            //    },
            //    dataType: 'json'
            //}).success(function (response) {
            $.ajax({
                type: 'POST',
                url: URL + 'api/OEE/GetDashboardOEEData',
                headers: {
                    Authorization: 'Bearer ' + user1
                },
                data: myData,
                dataType: 'json'
            }).success(function (response) {

                $("#linenamee").html('');
                $('.machinecount').html('');
                $('.chart').html('');
                $('.chart1').html('');
                $('.chart2').html('');
                $('.chart3').html('');
                $('.time1').html('');
                $('#totalok').html('');
                $('#totalnok').html('');
                $('#variant').html('');
                $("#details1").empty();

                //$('.quicklink').html('');
                //$('#assetscount').val(response.data[0].MachineCount+1);
                var count = response.data[0].MachineCount ;
                document.getElementById('line_heading').textContent = 'No of assets connected:' + count + '';

                document.getElementById('linetype').textContent = 'Type: '+response.data[0].Dept_name;

                //$('#assetscount').text(response.data[0].MachineCount+1);
                $('.updated_time').text(new Date().toLocaleString());
                $('.shift').text(response.data[0].shift_id);

                if (response.data.length!=0) {

                    //for (var i = 0; i < response.data.length; i++) {
                    //   var numb_array = [];
                    //    var mc_high_no = response.data[i].MachineIndex
                    //   numb_array.push(parseInt(mc_high_no));

                    //}
                    //var max = numb_array.reduce(function (a, b) {
                    //   return Math.max(a, b);
                    //});
                    var final_oee = 0;
                    for (var i = 0; i < response.data.length; i++) {
                        if (response.data[i].MachineIndex == 1) {
                            final_oee = response.data[i].OEE;
                            document.getElementById('variant').textContent = 'Variant: '+response.data[i].variant_name;
                            //$('#variant').text(response.data[i].variant_name);
                        }
                    }

                    for (var i = 0; i < 1; i++)
                    {

                        $("#linenamee").text(response.data[i].line_name+'_'+response.data[i].Line_Code);

                        $('#totalok').text(response.data[i].totalok);
                        $('#totalnok').text(response.data[i].totalnok);
                        //document.getElementById('uptime').textContent = 'UpTime: ' + response.data[i].uptime;
                        //document.getElementById('downtime').textContent = 'DownTime: ' + response.data[i].downtime;
                        //document.getElementById('losstime').textContent = 'LossTime: ' + response.data[i].losstime;
                        //document.getElementById('breaktime').textContent = 'BreakTime: '+response.data[i].losstime;


                          $('.quicklink').html("<div class='col-lg-12' style='background-color:#c3c7c5;padding-bottom:2%;border-style:solid;border-width: thin;border-color:black;'>"+

                              "<p style='font-weight:bolder;color:black'>Quick Links - RealTime Dashboard</p>" +
                             "<div class='row' style='text-align:center;width:100%'>"+
                            "<a href='/Quality/QualityLiveDashboard?"+linename+"'' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-bar-chart-o fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Production<br/><br/></span></button></a>&nbsp;"+
                             "<a href='/FirstPassYield/HourlyTrackerLive?"+linename+"' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-clock-o fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Hourly</br>Tracker</span></button></a>&nbsp;" +
                             "<a href='/Availability/AvailabilityLiveDashboard?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-history' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Machine</br>Availability</span></button></a>&nbsp;"+
                             "<a href='/OEE/OEELiveDashboard?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-dashboard fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>OEE<br/><br/></span></button></a>&nbsp;" +
                             "<a href='/OperatorEfficiency/OperatorEfficiencyLive?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-user fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Operator</br>Efficiency</span></button></a>&nbsp;" +
                              "<a href='/ToolLife/ToolLifeLiveDashboard?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa  fa-th-list fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Preventive</br>Maintenance</span></button></a>&nbsp;" +
                             "<a href='/FirstPassYield/FirstPassYieldLiveDashboard?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-check-square-o fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>FirstPass</br>Yield</span></button></a>"+
                             "</div>"+
                            //"<a href='/Quality/QualityLiveDashboard?"+linename+"' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Production Dashboard</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />"+
                            //"<a href='/FirstPassYield/HourlyTrackerLive?"+linename+"' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Hourly Tracker</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />"+
                            //"<a href='/FirstPassYield/FirstPassYieldLiveDashboard?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>FirstPass Yield</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/Availability/AvailabilityLiveDashboard?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Machine Availability</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/OEE/OEELiveDashboard?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>OEE</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/OperatorEfficiency/OperatorEfficiencyLive?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Operator Efficiency</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/ToolLife/ToolLifeLiveDashboard?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Preventive Maintenance</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/Paretoanalysis/AndonLive?" + linename + "' style='text-decoration:none'><span style='font-size-adjust: inherit; color: black'>AndON</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +

                             "</div > ");

                        chec(final_oee, 100 - final_oee);
                        chec1(response.data[i].Availability, 100 - response.data[i].Availability);
                        chec2(response.data[i].Performance, 100 - response.data[i].Performance);
                        chec3(response.data[i].Quality, 100 - response.data[i].Quality);
                        time(response.data[i].uptime,response.data[i].downtime,response.data[i].losstime,0);


                        for (var j = 0; j < response.data[0].MachineCount; j++)
                        {

                            var color = '';
                            if (response.data[j].MachineStatus == "0") {
                                color = 'red';
                            }
                            if (response.data[j].MachineStatus == '1') {
                                color = 'green';
                            }
                            if (response.data[j].MachineStatus == '2') {
                                color = 'red';
                            }
                            if (response.data[j].MachineStatus == '3') {
                                color = 'yellow';
                            }
                            if (response.data[j].MachineStatus == '4') {
                                color = 'grey';
                            }
                            if (response.data[j].MachineStatus == '5') {
                                color = 'blue';
                            }
                            //$('.machinecount').append("<div class='' title='" + response.data[j].MachineCode + "' style='border-style:none;'><img src='/Images/working-factory-svgrepo-com.svg' style='background-color:"+color+";' /> </div>");
                            $('.machinecount').append("<div class='box "+color+"' title='" + response.data[j].MachineCode + "' style='border-style:solid;border-width:thin;border-color:black'><p></p> </div>");
                        }

                            var newRow = $("<tr>");
                            var cols = '';
                            cols += "<td style='text-align:center;color:black;'> <table border='1' style='border-collapse:collapse;width:100%;background-color:#1bb7cb;color:black;'><tr><td>A</td><td>P</td><td>Q</td></tr><tr><td> " + response.data[i].Availability + "</td><td> " + response.data[i].Performance + "</td><td> " + response.data[i].Quality + "</td></tr></table></td>";
                            cols += "</tr>"

                            newRow.append(cols);

                            $("#details1").append(newRow);

                    }
                    //alert("came")
                    //$('.hideline').hide();
                    //$('.lineitemname' + aa + '').show();
                }
                else
                {
                    $(".lineitem").empty();
                    var cols = '';
                    cols += "<div class='col-md-12 col-xl-12' style='font-weight:bold;font-size:15px;color:red;'> No Data Available...!</div>";
                    $(".lineitem").html(cols);
                }
            }).error(function (response) {
                if (response.status == "401") {
                    swal({
                        icon: "warning",
                        title: "Session Timeout",
                        button: true,
                        closeModal: false
                    })
                    window.location = R_url;
                }
                else {
                    swal({
                        icon: "warning",
                        title: response.responseText,
                        button: true,
                        closeModal: false
                    })

                }
            });
             //}).error(function (response) {
             //    swal({
             //        icon: "warning",
             //        title: "Session Timeout",
             //        button: true,
             //        closeModal: false
             //    })
             //    window.location = R_url;
             //});
            // setTimeout(getData, 10000);
        }


        function getlineitems() {
             var R_url = '@Url.Action("Login", "Main")';
            var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';
            //$.ajax({
            //    type: 'Post',
            //    url: URL + 'api/OEE/GetEmployee',
            //    headers: {
            //        Authorization: 'Bearer ' + user1
            //    },
            //    dataType: 'json'
            //}).success(function (response) {
            var myData = {
                "CompanyCode": '@Session["CompanyCode"]',
                "PlantCode": '@Session["PlantCode"]',
                "Line_Code": linename,
             };
            $.ajax({
                type: 'POST',
                url: URL + 'api/OEE/GetDashboardOEEData',
                headers: {
                    Authorization: 'Bearer ' + user1
                },
                data: myData,
                dataType: 'json'
            }).success(function (response) {

                $("#linenamee").html('');
                $('.machinecount').html('');
                $('.chart').html('');
                 $('.chart1').html('');
                $('.chart2').html('');
                $('.chart3').html('');
                $('.time1').html('');
                $('#totalok').html('');
                $('#totalnok').html('');
                $('#variant').html('');
                $("#details1").empty();

                //$('.quicklink').html('');
                //$('#assetscount').val(response.data[0].MachineCount+1);
                var count = response.data[0].MachineCount ;
                document.getElementById('line_heading').textContent = 'No of assets connected:' + count + '';

                document.getElementById('linetype').textContent = 'Type: '+response.data[0].Dept_name;
                //$('#assetscount').text(response.data[0].MachineCount+1);
                $('.updated_time').text(new Date().toLocaleString());
                $('.shift').text(response.data[0].shift_id);

                if (response.data.length!=0) {
                    //for (var i = 0; i < response.data.length; i++) {
                    //   var numb_array = [];
                    //    var mc_high_no = response.data[i].MachineIndex
                    //   numb_array.push(parseInt(mc_high_no));

                    //}
                    //var max = numb_array.reduce(function (a, b) {
                    //   return Math.max(a, b);
                    //});
                    var final_oee = 0;
                    for (var i = 0; i < response.data.length; i++) {
                        if (response.data[i].MachineIndex == 1) {
                            final_oee = response.data[i].OEE;
                            document.getElementById('variant').textContent = 'Variant: '+response.data[i].variant_name;
                            //$('#variant').text(response.data[i].variant_name);
                        }
                    }

                    //alert(final_oee)

                    for (var i = 0; i < 1; i++)
                    {


                        $("#linenamee").text(response.data[i].line_name+'_'+response.data[i].Line_Code);

                        $('#totalok').text(response.data[i].totalok);
                        $('#totalnok').text(response.data[i].totalnok);
                        //document.getElementById('uptime').textContent = 'UpTime: ' + response.data[i].uptime;
                        //document.getElementById('downtime').textContent = 'DownTime: ' + response.data[i].downtime;
                        //document.getElementById('losstime').textContent = 'LossTime: ' + response.data[i].losstime;
                        //document.getElementById('breaktime').textContent = 'BreakTime: '+response.data[i].losstime;


                         $('.quicklink').html("<div class='col-lg-12' style='background-color:#c3c7c5;padding-bottom:2%;border-style:solid;border-width: thin;border-color:black;'>"+

                             "<p style='font-weight:bolder;color:black'>Quick Links - RealTime Dashboard</p>" +
                             "<div class='row' style='text-align:center;width:100%'>"+
                            "<a href='/Quality/QualityLiveDashboard?"+linename+"'' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-bar-chart-o fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Production<br/><br/></span></button></a>&nbsp;"+
                             "<a href='/FirstPassYield/HourlyTrackerLive?"+linename+"' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-clock-o fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Hourly</br>Tracker</span></button></a>&nbsp;" +
                             "<a href='/Availability/AvailabilityLiveDashboard?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-history' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Machine</br>Availability</span></button></a>&nbsp;"+
                             "<a href='/OEE/OEELiveDashboard?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-dashboard fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>OEE<br/><br/></span></button></a>&nbsp;" +
                             "<a href='/OperatorEfficiency/OperatorEfficiencyLive?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-user fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Operator</br>Efficiency</span></button></a>&nbsp;" +
                              "<a href='/ToolLife/ToolLifeLiveDashboard?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa  fa-th-list fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>Preventive</br>Maintenance</span></button></a>&nbsp;" +
                             "<a href='/FirstPassYield/FirstPassYieldLiveDashboard?" + linename + "' style='text-decoration:none'><button type='button' class=' btn btn-lg btn-default' style='width:13%;'><i class='fa fa-check-square-o fa-lg' aria-hidden='true' style='color:#000203'></i></br><span style='font-size-adjust:initial;font-size:small;color:black'>FirstPass</br>Yield</span></button></a>"+
                             "</div>"+
                            //"<a href='/Quality/QualityLiveDashboard?"+linename+"' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Production Dashboard</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />"+
                            //"<a href='/FirstPassYield/HourlyTrackerLive?"+linename+"' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Hourly Tracker</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />"+
                            //"<a href='/FirstPassYield/FirstPassYieldLiveDashboard?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>FirstPass Yield</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/Availability/AvailabilityLiveDashboard?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Machine Availability</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/OEE/OEELiveDashboard?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>OEE</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/OperatorEfficiency/OperatorEfficiencyLive?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Operator Efficiency</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/ToolLife/ToolLifeLiveDashboard?" + linename + "' style='text-decoration:none'><span style='font-size-adjust:inherit;color:black'>Preventive Maintenance</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +
                            //"<a href='/Paretoanalysis/AndonLive?" + linename + "' style='text-decoration:none'><span style='font-size-adjust: inherit; color: black'>AndON</span>&nbsp;<span class='fa fa-external-link' style='color:black'></span></a><br />" +

                             "</div > ");

                        chec(final_oee, 100 - final_oee);
                        chec1(response.data[i].Availability, 100 - response.data[i].Availability);
                        chec2(response.data[i].Performance, 100 - response.data[i].Performance);
                        chec3(response.data[i].Quality, 100 - response.data[i].Quality);
                        time(response.data[i].uptime,response.data[i].downtime,response.data[i].losstime,0);


                        for (var j = 0; j < response.data[0].MachineCount; j++)
                        {

                            var color = '';
                            if (response.data[j].MachineStatus == "0") {
                                color = 'red';
                            }
                            if (response.data[j].MachineStatus == '1') {
                                color = 'green';
                            }
                            if (response.data[j].MachineStatus == '2') {
                                color = 'red';
                            }
                            if (response.data[j].MachineStatus == '3') {
                                color = 'yellow';
                            }
                            if (response.data[j].MachineStatus == '4') {
                                color = 'grey';
                            }
                            if (response.data[j].MachineStatus == '5') {
                                color = 'blue';
                            }
                            //$('.machinecount').append("<div class='' title='" + response.data[j].MachineCode + "' style='border-style:none;'><img src='/Images/working-factory-svgrepo-com.svg' style='background-color:"+color+";' /> </div>");
                           $('.machinecount').append("<div class='box "+color+"' title='" + response.data[j].MachineCode + "' style='border-style:solid;border-width:thin;border-color:black'><p></p> </div>");
                        }

                          var newRow = $("<tr>");
                            var cols = '';
                            cols += "<td style='text-align:center;'> <table border='1' style='border-collapse:collapse;width:100%;background-color:#1bb7cb;color:black;'><tr><td>A</td><td>P</td><td>Q</td></tr><tr><td> " + response.data[i].Availability + "</td><td> " + response.data[i].Performance + "</td><td> " + response.data[i].Quality + "</td></tr></table></td>";
                            cols += "</tr>"

                            newRow.append(cols);

                            $("#details1").append(newRow);

                    }
                    //alert("came")
                    //$('.hideline').hide();
                    //$('.lineitemname' + aa + '').show();
                }
                else
                {
                    $(".lineitem").empty();
                    var cols = '';
                    cols += "<div class='col-md-12 col-xl-12' style='font-weight:bold;font-size:15px;color:red;'> No Data Available...!</div>";
                    $(".lineitem").html(cols);
                }
            }).error(function (response) {
                if (response.status == "401") {
                    swal({
                        icon: "warning",
                        title: "Session Timeout",
                        button: true,
                        closeModal: false
                    })
                    window.location = R_url;
                }
                else {
                    swal({
                        icon: "warning",
                        title: response.responseText,
                        button: true,
                        closeModal: false
                    })

                }
            });
            //}).error(function (response) {

            //    swal({
            //        icon: "warning",
            //        title: "Session Timeout",
            //        button: true,
            //        closeModal: false
            //    })
            //    window.location = R_url;

            //});
            //sendsms();
             setTimeout(getlineitems, 10000);
        }

    </script>

    <script>

        function chec(aa, bb) {


            // Data
            var value = aa / 100
            var text = Math.round(value * 100) + '%'
            var data = [value, 1 - value]

            // Settings
            var width = $('#chartid').width()
            var height = $('#chartid').height()
            var anglesRange = 0.5 * Math.PI
            var radis = Math.min(width, 2 * height) / 2
            var thickness = 30
            // Utility
            //     var colors = d3.scale.category10();
            // Create dummy data

            var color = '';

            if (aa >= 81 && aa <= 100) {
                color = '#009900';
            }
            else if (aa >= 61 && aa <= 80) {
                color = '#d95f02';
            }
            else if (aa >= 41 && aa <= 60) {
                color = '#000099';
            }
            else if (aa >= 0 && aa <= 40) {
                color = '#FF0000';
            }
            var colors = ["#69A3D8", "#F5F5F5"]

            var pies = d3.pie()
                .value(d => d)
                .sort(null)
                .startAngle(anglesRange * -1)
                .endAngle(anglesRange)

            var arc = d3.arc()
                .outerRadius(radis)
                .innerRadius(radis - thickness)

            var translation = (x, y) => `translate(${x}, ${y})`

            // Feel free to change or delete any of the code you see in this editor!
            var svg = d3.select(".chart").append("svg")
                .attr("width", width)
                .attr("height", height)
                .attr("class", "half-donut")
                .append("g")
                .attr("transform", translation(width / 2, height))


            svg.selectAll("path")
                .data(pies(data))
                .enter()
                .append("path")
                .attr("fill", (d, i) => colors[i])
                .attr("d", arc)

            svg.append("text")
                .attr("text-anchor", "middle")
                .attr('font-size', '-3rem')
                //.attr('y', 5)
                .text(d => text)


            svg.append("text")
                .text("OEE")
                .attr("dy", "-3rem")
                .attr("class", "label")
                .attr("text-anchor", "middle")



        }

        function chec1(aa, bb) {


            // Data
            var value = aa / 100
            var text = Math.round(value * 100) + '%'
            var data = [value, 1 - value]

            // Settings
            var width = $('#chartid1').width()
            var height = $('#chartid1').height()
            var anglesRange = 0.5 * Math.PI
            var radis = Math.min(width, 2 * height) / 2
            var thickness = 30
            // Utility
            //     var colors = d3.scale.category10();
            // Create dummy data

            var color = '';

            if (aa >= 81 && aa <= 100) {
                color = '#009900';
            }
            else if (aa >= 61 && aa <= 80) {
                color = '#d95f02';
            }
            else if (aa >= 41 && aa <= 60) {
                color = '#000099';
            }
            else if (aa >= 0 && aa <= 40) {
                color = '#FF0000';
            }
            var colors = ["#B6D358", "#F5F5F5"]

            var pies = d3.pie()
                .value(d => d)
                .sort(null)
                .startAngle(anglesRange * -1)
                .endAngle(anglesRange)

            var arc = d3.arc()
                .outerRadius(radis)
                .innerRadius(radis - thickness)

            var translation = (x, y) => `translate(${x}, ${y})`

            // Feel free to change or delete any of the code you see in this editor!
            var svg = d3.select(".chart1").append("svg")
                .attr("width", width)
                .attr("height", height)
                .attr("class", "half-donut")
                .append("g")
                .attr("transform", translation(width / 2, height))


            svg.selectAll("path")
                .data(pies(data))
                .enter()
                .append("path")
                .attr("fill", (d, i) => colors[i])
                .attr("d", arc)

            svg.append("text")
                .attr("text-anchor", "middle")
                .attr('font-size', '-3rem')
                //.attr('y', 5)
                .text(d => text)


            svg.append("text")
                .text("Availability")
                .attr("dy", "-3rem")
                .attr("class", "label")
                .attr("text-anchor", "middle")



        }

        function chec2(aa, bb) {


            // Data
            var value = aa / 100
            var text = Math.round(value * 100) + '%'
            var data = [value, 1 - value]

            // Settings
            var width = $('#chartid2').width()
            var height = $('#chartid2').height()
            var anglesRange = 0.5 * Math.PI
            var radis = Math.min(width, 2 * height) / 2
            var thickness = 30
            // Utility
            //     var colors = d3.scale.category10();
            // Create dummy data

            var color = '';

            if (aa >= 81 && aa <= 100) {
                color = '#009900';
            }
            else if (aa >= 61 && aa <= 80) {
                color = '#d95f02';
            }
            else if (aa >= 41 && aa <= 60) {
                color = '#000099';
            }
            else if (aa >= 0 && aa <= 40) {
                color = '#FF0000';
            }
            var colors = ["#0A3866", "#F5F5F5"]

            var pies = d3.pie()
                .value(d => d)
                .sort(null)
                .startAngle(anglesRange * -1)
                .endAngle(anglesRange)

            var arc = d3.arc()
                .outerRadius(radis)
                .innerRadius(radis - thickness)

            var translation = (x, y) => `translate(${x}, ${y})`

            // Feel free to change or delete any of the code you see in this editor!
            var svg = d3.select(".chart2").append("svg")
                .attr("width", width)
                .attr("height", height)
                .attr("class", "half-donut")
                .append("g")
                .attr("transform", translation(width / 2, height))


            svg.selectAll("path")
                .data(pies(data))
                .enter()
                .append("path")
                .attr("fill", (d, i) => colors[i])
                .attr("d", arc)

            svg.append("text")
                .attr("text-anchor", "middle")
                .attr('font-size', '-3rem')
                //.attr('y', 5)
                .text(d => text)


            svg.append("text")
                .text("Performance")
                .attr("dy", "-3rem")
                .attr("class", "label")
                .attr("text-anchor", "middle")



        }

        function chec3(aa, bb) {


            // Data
            var value = aa / 100
            var text = Math.round(value * 100) + '%'
            var data = [value, 1 - value]

            // Settings
            var width = $('#chartid3').width()
            var height = $('#chartid3').height()
            var anglesRange = 0.5 * Math.PI
            var radis = Math.min(width, 2 * height) / 2
            var thickness = 30
            // Utility
            //     var colors = d3.scale.category10();
            // Create dummy data

            var color = '';

            if (aa >= 81 && aa <= 100) {
                color = '#009900';
            }
            else if (aa >= 61 && aa <= 80) {
                color = '#d95f02';
            }
            else if (aa >= 41 && aa <= 60) {
                color = '#000099';
            }
            else if (aa >= 0 && aa <= 40) {
                color = '#FF0000';
            }
            var colors = ["#8B6FA8", "#F5F5F5"]

           
            var pies = d3.pie()
                .value(d => d)
                .sort(null)
                .startAngle(anglesRange * -1)
                .endAngle(anglesRange)

            var arc = d3.arc()
                .outerRadius(radis)
                .innerRadius(radis - thickness)

            var translation = (x, y) => `translate(${x}, ${y})`

            // Feel free to change or delete any of the code you see in this editor!
            var svg = d3.select(".chart3").append("svg")
                .attr("width", width)
                .attr("height", height)
                .attr("class", "half-donut")
                .append("g")
                .attr("transform", translation(width / 2, height))


            svg.selectAll("path")
                .data(pies(data))
                .enter()
                .append("path")
                .attr("fill", (d, i) => colors[i])
                .attr("d", arc)

            svg.append("text")
                .attr("text-anchor", "middle")
                .attr('font-size', '-3rem')
                //.attr('y', 5)
                .text(d => text)


            svg.append("text")
                .text("Quality")
                .attr("dy", "-3rem")
                .attr("class", "label")
                .attr("text-anchor", "middle")



        }

    </script>

    @*<script type="text/javascript">

        function time(a, b, c, d) {

            var width = $('.time1').width()
            height = $('.time1').height()
            margin = 5

            //var width = 140
            //height = 140
            //margin = 10

            // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
            var radius = Math.min(width, height) / 2 - margin;

            // append the svg object to the div called 'availabilitychart'
            var svg = d3.select(".time1")
                .append("svg")
                .attr("width", width)
                .attr("height", height)
                .append("g")
                .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");


            // Create dummy data
            var data = {"Uptime": a,"DownTime": b,"LossTime": c,"BreakTime": d }

            //var color = '';

            //if (aa >= 81 && aa <= 100) {
            //    color = '#009900';
            //}
            //else if (aa >= 61 && aa <= 80) {
            //    color = '#d95f02';
            //}
            //else if (aa >= 41 && aa <= 60) {
            //    color = '#000099';
            //}
            //else if (aa >= 0 && aa <= 40) {
            //    color = '#FF0000';
            //}

            var color = d3.scaleOrdinal(['#4daf4a','#377eb8','#ff7f00','#984ea3','#e41a1c']);
            //var color = d3.scale.category20();

            // set the color scale
            //var color = d3.scaleOrdinal()
            //    .domain(["a", "b","c","d"])
            //    .range([color, "#d3dee0"]);

            // Compute the position of each group on the pie:
            var pie = d3.pie()
                .sort(null) // Do not sort group by size
                .value(function (d) { return d.value; })
            var data_ready = pie(d3.entries(data))

            // The arc generator
            var arc = d3.arc()
                .innerRadius(radius * 0.5)         // This is the size of the donut hole
                .outerRadius(radius * 0.8)

            // Another arc that won't be drawn. Just for labels positioning
            var outerArc = d3.arc()
                .innerRadius(radius * 0.9)
                .outerRadius(radius * 0.9)

           
            // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.

            svg
                .selectAll('allSlices')
                .data(data_ready)
                .enter()
                .append('path')
                .attr('d', arc)
                .attr('fill', function (d) { return (color(d.data.key)) })

            svg.append("text")
                .attr("text-anchor", "middle")
                .attr('font-size', '4em')
                .attr('y', 5)
                .text("Utilization");
        }

    </script>*@

    <script>
        function time(a, b, c, d) {
            
            // set the dimensions and margins of the graph

            var width = $('.time1').width()
                height = $('.time1').height()
                margin = 5

            //var width = 450
            //    height = 450
            //    margin = 40

            // The radius of the pieplot is half the width or half the height (smallest one). I subtract a bit of margin.
            var radius = Math.min(width, height) / 2 - margin

            // append the svg object to the div called 'my_dataviz'
            var svg = d3.select(".time1")
              .append("svg")
                .attr("width", width)
                .attr("height", height)
              .append("g")
                .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

            // Create dummy data
            var data = {"upTime": a, "DownTime": b, "LossTime":c, "BreakTime":d}

            // set the color scale
            var color = d3.scaleOrdinal()
              .domain(["a", "b", "c", "d"])
              .range(d3.schemeDark2);

            // Compute the position of each group on the pie:
            var pie = d3.pie()
              .sort(null) // Do not sort group by size
              .value(function(d) {return d.value; })
            var data_ready = pie(d3.entries(data))

            // The arc generator
            var arc = d3.arc()
              .innerRadius(radius * 0.5)         // This is the size of the donut hole
              .outerRadius(radius * 0.8)

            // Another arc that won't be drawn. Just for labels positioning
            var outerArc = d3.arc()
              .innerRadius(radius * 0.9)
              .outerRadius(radius * 0.9)

            // Build the pie chart: Basically, each part of the pie is a path that we build using the arc function.
            svg
              .selectAll('allSlices')
              .data(data_ready)
              .enter()
              .append('path')
              .attr('d', arc)
              .attr('fill', function(d){ return(color(d.data.key)) })
              .attr("stroke", "white")
              .style("stroke-width", "2px")
              .style("opacity", 0.7)

            // Add the polylines between chart and labels:
            svg
              .selectAll('allPolylines')
              .data(data_ready)
              .enter()
              .append('polyline')
                .attr("stroke", "black")
                .style("fill", "none")
                .attr("stroke-width", 1)
                .attr('points', function(d) {
                  var posA = arc.centroid(d) // line insertion in the slice
                  var posB = outerArc.centroid(d) // line break: we use the other arc generator that has been built only for that
                  var posC = outerArc.centroid(d); // Label position = almost the same as posB
                  var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2 // we need the angle to see if the X position will be at the extreme right or extreme left
                  posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left
                  return [posA, posB, posC]
                })

            // Add the polylines between chart and labels:
            svg
              .selectAll('allLabels')
              .data(data_ready)
              .enter()
              .append('text')
                .text( function(d) { console.log(d.data.key) ; return d.data.key } )
                .attr('transform', function(d) {
                    var pos = outerArc.centroid(d);
                    var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2
                    pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);
                    return 'translate(' + pos + ')';
                })
                .style('text-anchor', function(d) {
                    var midangle = d.startAngle + (d.endAngle - d.startAngle) / 2
                    return (midangle < Math.PI ? 'start' : 'end')
                })
        }
    </script>

    
    <style>
        #tooltip1 {
            position: relative;
            display: inline-block;
            border-bottom: 1px dotted black;
        }

            #tooltip1 .tooltiptext {
                visibility: hidden;
                width: 180px;
                background-color: #555;
                color: #fff;
                text-align: center;
                border-radius: 6px;
                padding: 5px 0;
                position: absolute;
                z-index: 5;
                /*bottom: 1%;*/
                top: 1%;
                left: 50%;
                margin-left: -60px;
                opacity: 0;
                transition: opacity 0.3s;
            }

                #tooltip1 .tooltiptext::after {
                    content: "";
                    position: absolute;
                    top: 100%;
                    left: 50%;
                    margin-left: -5px;
                    border-width: 5px;
                    border-style: solid;
                    border-color: #555 transparent transparent transparent;
                }

            #tooltip1:hover .tooltiptext {
                visibility: visible;
                opacity: 1;
            }
    </style>
}
else
{

    <div>
        <br /><br />
        <label style="font-weight:bolder;text-align:center">Select Company and Plant Code </label>
    </div>
}

