
@{ ViewBag.Title = "Quality";
                Layout = "~/Views/Shared/_Layout.cshtml"; }


<link rel="stylesheet" type="text/css" href="~/assets1/datepicker_normal/jquery-ui-1.8.19.custom.css">
<script src="~/Scripts/d3.min.js"></script>
<style>
    .dataTables_filter {
        float: right;
    }
</style>
<style type="text/css">

    .key-dot {
        display: inline-block;
        height: 10px;
        margin-right: .5em;
        width: 10px;
    }

    .legend {
        margin-right: 20px;
    }

    .queens {
        background: #0993F3;
    }

    .kings {
        background: #F31409;
    }

    .bronx {
        background: #F7DB26;
    }

    /*HTML Horizonal Legend*/
    .country-name {
        margin: 0 !important;
    }

    .key-dot {
        display: inline-block;
        height: 10px;
        margin-right: .5em;
        width: 10px;
    }

    .uk {
        background: #1F77B4;
    }

    .denmark {
        background: #FF7F0E;
    }

    .germany {
        background: #2CA02C;
    }

    #legend2 {
        overflow: hidden;
        margin-left: 500px;
    }

    .legend2 {
        float: left;
        margin-right: 1em;
    }




    .radiobtn {
        margin: 10px;
    }

    .line {
        fill: none;
        stroke: #007fd6;
        stroke-width: 4px;
    }

    .node {
        fill: #007fd6;
        stroke: #fff;
        stroke-width: 2px;
    }

    .tooltip {
        position: absolute;
        text-align: center;
        width: 60px;
        height: 28px;
        padding: 2px;
        font: 12px sans-serif;
        background: lightsteelblue;
        border: 0px;
        border-radius: 8px;
        pointer-events: none;
    }
</style>

<header class="page-header">
    <h2> Quality Overview </h2>
    <div class="right-wrapper pull-right">
        <ol class="breadcrumbs">
            <li>
                <a href="@Url.Action("MainDashboard","MainDashboard")">
                    <i class="fa fa-home"></i>
                </a>
            </li>
            <li><span>Quality</span></li>
        </ol>
    </div>
</header>



<div class="row" id="Historic" style="display:block;">
    <div class="col-md-2"></div>

    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Quality Overview </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <label class="col-sm-2 control-label"> Select Machine  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <select class="form-control" id="Machine">
                            <option value="0">Select</option>
                        </select>
                    </div>

                    <label class="col-sm-2 control-label"> Report Category  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <select class="form-control" id="Report_category">
                            <option value="0">Select</option>
                            <option value="1">Quality Analysis</option>
                            <option value="2">Loss/Alarm Analysis</option>
                            <option value="3">Cycle Time Analysis</option>
                        </select>
                    </div>

                    <label class="col-sm-2 control-label"> Report  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <select class="form-control" id="Report_name">
                            @*<option value="1">Quality Trend-TABLE</option>
                                <option value="2">Quality Trend-chart</option>
                                <option value="3">Quality% Trend-chart</option>
                                <option value="4">Specific reaonwise trend-TABLE</option>
                                <option value="5">Specific reaonwise trend-CHART</option>
                                <option value="6">Specific reaonwise timestamp-TABLE</option>*@

                            @*<option value="10">List of Rejections time stamp</option>*@

                        </select>
                    </div>



                    @*<label class="col-sm-2 control-label"> Select Variant  <span class="required">*</span></label>
                        <div class="col-sm-2">
                            <select class="form-control" id="Variant">
                                <option value="All">All</option>
                            </select>
                        </div>*@
                </div>

                <div class="form-group">
                    <label class="col-sm-2 control-label"> Select Update  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <select class="form-control" id="Report_type">
                            @*<option value="0">Select</option>*@
                            @*<option value="1">Live</option>*@
                            <option value="2">Historic</option>
                            @*<option value="3">MIS</option>*@
                        </select>
                    </div>

                    <div style="display:none;" id="divcurrent">
                        <label class="col-sm-2 control-label"> TimeSlot  <span class="required">*</span></label>
                        <div class="col-sm-2">

                            <input value="This Shift" class="form-control" readonly />
                        </div>
                    </div>



                    <div style="display:none;" id="divall">
                        <label class="col-sm-2 control-label"> TimeSlot  <span class="required">*</span></label>
                        <div class="col-sm-2">
                            <select class="form-control" id="TimeSlot" name="timeslot">
                                <option value="0">Select</option>
                                <option value="1">Shift</option>
                                <option value="2">Day</option>
                                <option value="3">Week</option>
                                <option value="4">Month</option>
                                <option value="5">Year</option>
                                <option value="6">Custom</option>
                            </select>
                        </div>
                    </div>

                </div>

                <div id="divreason" class="form-group" style="display:none;">
                    @*<label class="col-sm-2 control-label"> Select Operator  <span class="required">*</span></label>
                        <div class="col-sm-2">
                            <select class="form-control" id="Operator">
                                <option value="All">All</option>
                            </select>
                        </div>*@

                    <label class="col-sm-2 control-label"> Reason  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <select class="form-control" id="Reason"></select>
                    </div>

                    <label class="col-sm-2 control-label">  Subassembly Name</label>
                    <div class="col-sm-2">
                        <select class="form-control" id="subassembly"></select>
                    </div>
                </div>

                <div class="form-group" style="display:none;" id="divshift">
                    <label class="col-sm-2 control-label"> Shift  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <select id="ShiftID" class="form-control">
                            <option value="0">Select Shift</option>
                            <option value="S1">S1</option>
                            <option value="S2">S2</option>
                            <option value="S3">S3</option>
                        </select>
                    </div>
                    <label class="col-sm-2 control-label"> Date  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control datepic" id="ShiftDate" autocomplete="off" readonly />
                    </div>
                </div>

                <div class="form-group" style="display:none;" id="divday">
                    <label class="col-sm-2 control-label"> Date  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control datepic" id="Date" autocomplete="off" readonly />
                    </div>
                </div>

                @*<div class="form-group" style="display:none;" id="divweek">

                        <label class="col-sm-2 control-label"> Date  <span class="required">*</span></label>
                        <div class="col-sm-2">
                            <input type="text" class="form-control yearpic" id="WDate" />
                        </div>

                        <label class="col-sm-2 control-label"> Week  <span class="required">*</span></label>
                        <div class="col-sm-2">
                            <select id="Week" class="form-control">
                                <option value="0">Select Week</option>
                                <option value="W1">W1</option>
                                <option value="W2">W2</option>
                                <option value="W3">W3</option>
                            </select>
                        </div>


                    </div>*@

                <div class="form-group" style="display:none;" id="divmonth">
                    <label class="col-sm-2 control-label"> Month  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control monthpic" id="Month" autocomplete="off" readonly />
                    </div>
                </div>

                <div class="form-group" style="display:none;" id="divyear">
                    <label class="col-sm-2 control-label"> Year  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control yearpic" id="Year" autocomplete="off" readonly />
                    </div>
                </div>

                <div class="form-group" style="display:none;" id="divcustom">

                    <label class="col-sm-2 control-label"> FromDate  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control" id="FromDate" autocomplete="off" readonly />
                    </div>

                    <label class="col-sm-2 control-label"> ToDate  <span class="required">*</span></label>
                    <div class="col-sm-2">
                        <input type="text" class="form-control" id="ToDate" autocomplete="off" readonly />
                    </div>
                </div>

            </div>
            <footer class="panel-footer">
                <div class="row">
                    <div class="col-sm-9 col-sm-offset-3" style="text-align:right;">
                        <button type="button" id="Search_QA" class="btn btn-primary">Search</button>
                        <button type="reset" id="cancel" class="btn btn-danger cancel">Reset</button>
                    </div>
                </div>
            </footer>
        </section>
    </div>
</div>





<!--Specific Reason Hour Wise-->

<div class="row" id="Horly_Specific_trend" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Hourly Specific Reason Trend-Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_specific_hour" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="hourlyreason_mis" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_reason"></span> </th>
                                <th class="centercls"> Shift Id : <span id="shift_id_reason"></span> </th>
                                <th class="centercls"> Date : <span id="shift_date_reason"></span> </th>
                            </tr>
                            <tr>
                                <th> Hour </th>
                                <th> occurrence </th>
                                <th> occurrence %</th>
                            </tr>
                        </thead>
                        <tbody class="Specific_hourly_details"></tbody>
                        <span class="custom_pre_error" style="color:red;font-size:13px;font-weight:bold;"></span>

                    </table>
                </div>
            </div>
        </section>
    </div>
</div>


<div class="row" id="Hourly_Specific_trend_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Hourly Specific Reason Trend-Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    @*<div class="Hourly_chart_specific">
                        </div>*@
                    <div id='container' style="height:800px;width:100%;">
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>


<!--Specific Reason Day wise -->
<div class="row" id="Daily_Specific_trend" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Shiftwise Specific Reason Trend-Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_specific_day" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="daywise_reason" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_dayreason"></span> </th>
                                <th class="centercls"> Date : <span id="day_date_dayreason"></span> </th>
                            </tr>
                            <tr>
                                <th> Shift </th>
                                <th> occurrence </th>
                                <th> occurrence %</th>
                            </tr>
                        </thead>
                        <tbody class="Specific_shift_details"></tbody>
                        <span class="custom_pre_error" style="color:red;font-size:13px;font-weight:bold;"></span>

                    </table>
                </div>
            </div>
        </section>
    </div>
</div>


<div class="row" id="Daily_Specific_trend_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Shiftwise Specific Reason Trend-Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <div class="Shift_chart_specific">
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>


<!--Specific Reason Month wise -->
<div class="row" id="Monthly_Specific_trend" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Weekly Specific Reason Trend-Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_specific_week" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="weekwise_reason" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_weekreason"></span> </th>
                                <th class="centercls"> Date : <span id="week_date_weekreason"></span> </th>
                            </tr>
                            <tr>
                                <th> Week </th>
                                <th> occurrence </th>
                                <th> occurrence %</th>
                            </tr>
                        </thead>
                        <tbody class="Specific_week_details"></tbody>
                        <span class="custom_pre_error" style="color:red;font-size:13px;font-weight:bold;"></span>

                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row" id="Month_Specific_trend_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Monthwise Specific Reason Trend-Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <div class="Month_chart_specific">
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>


<!--Specific Reason Yearwise-->
<div class="row" id="Yearly_Specific_trend" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Yearly Specific Reason Trend-Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_specific_month" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="monthwise_reason" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_monthreason"></span> </th>
                                <th class="centercls"> Date : <span id="month_date_monthreason"></span> </th>
                            </tr>
                            <tr>
                                <th> Year </th>
                                <th> Month </th>
                                <th> occurrence </th>
                                <th> occurrence %</th>
                            </tr>
                        </thead>
                        <tbody class="Specific_month_details"></tbody>
                        <span class="custom_pre_error" style="color:red;font-size:13px;font-weight:bold;"></span>

                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row" id="Year_Specific_trend_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Yearly Specific Reason Trend-Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <div class="Year_chart_specific">
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>


<!--Specific Reason Customwise-->
<div class="row" id="Custom_Specific_trend" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Custom Specific Reason Trend-Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_specific_custom" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="customwise_reason" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_customreason"></span> </th>
                                <th class="centercls">From Date : <span id="customfrom_date_customreason"></span> </th>
                                <th class="centercls">To Date : <span id="customto_date_customreason"></span> </th>
                            </tr>
                            <tr>
                                <th> Year </th>
                                <th> occurrence </th>
                                <th> occurrence %</th>
                            </tr>
                        </thead>
                        <tbody class="Specific_custom_details"></tbody>
                        <span class="custom_pre_error" style="color:red;font-size:13px;font-weight:bold;"></span>

                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row" id="Custom_Specific_trend_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Custom Specific Reason Trend-Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <div class="Custom_chart_specific" style="height:600px;width:100%">
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>


<!--Specific Reason Weekwise-->
<div class="row" id="Week_Specific_trend" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Weekly Specific Reason Trend-Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_specific_daywise" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="weekwise1_reason" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_weekreason1"></span> </th>
                                <th class="centercls"> Date : <span id="week_date_weekreason1"></span> </th>
                            </tr>
                            <tr>
                                <th> Date </th>
                                <th> occurrence </th>
                                <th> occurrence %</th>
                            </tr>
                        </thead>
                        <tbody class="Specific_daywise_details"></tbody>
                        <span class="custom_pre_error" style="color:red;font-size:13px;font-weight:bold;"></span>

                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<!--Specific Reason timestamp shiftwise-->
<div class="row" id="Week_Specific_trend_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Weekly Specific Reason Trend-Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <div class="Week_chart_specific">
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>



<div class="row" id="Specific_reason_timestamp" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Specific Reasonwise Timestamp </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_timestamp" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr>
                                <th>S.No</th>
                                <th> Time </th>
                                <th> Operator </th>
                                <th> Variant </th>
                                <th> OK </th>
                                <th> NOK </th>
                            </tr>
                        </thead>
                        <span class="custom_timestamp_error" style="color:red;font-size:13px;font-weight:bold;"></span>
                        <tbody class="timestamp_details"></tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row" id="all_reason_timestamp" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> All Reasonwise Timestamp </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_all_reason">
                        <thead style="background-color:teal;color:white;">
                            <tr>
                                <th>S.No</th>
                                <th> Time </th>
                                <th> Operator </th>
                                <th> Variant </th>
                                <th> OK </th>
                                <th> NOK </th>
                            </tr>
                        </thead>
                        <span class="custom_all_timestamp_error" style="color:red;font-size:13px;font-weight:bold;"></span>
                        <tbody class="all_timestamp_details"></tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>


<!--------Daywise pareto-->

<div class="row" id="Daywise_rejection" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Daywise Top 10 Rejection -Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_daywise" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="dailypareto_mis" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_pareto"></span> </th>
                                <th class="centercls"> Date : <span id="daily_date_pareto"></span> </th>
                            </tr>
                            <tr>
                                <th> Quality Issue </th>
                                <th> Frequency </th>
                                <th> Frequency %</th>
                            </tr>
                        </thead>
                        <tbody class="daywise_rejection"></tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row" id="Daywise_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Daywise Top 10 Rejection -Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">

                    <div id='daywise_chart' style="height:600px;width:100%">
                        <svg class="custom1" style="height:100%;width:100%"></svg>
                    </div>


                </div>
            </div>
        </section>
    </div>
</div>

<!-------Monthwise pareto-->

<div class="row" id="Monthwise_rejection" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Monthwise Top 10 Rejection -Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_monthwise" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="weekpareto_mis" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_paretoweek"></span> </th>
                                <th class="centercls"> Date : <span id="week_date_paretoweek"></span> </th>
                            </tr>
                            <tr>
                                <th> Quality Issue </th>
                                <th> Frequency </th>
                                <th> Frequency %</th>
                            </tr>
                        </thead>
                        <tbody class="monthwise_rejection"></tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row" id="Monthly_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Monthwise Top 10 Rejection -Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">

                    <div id='monthwise_chart' style="height:600px;width:100%">
                        <svg class="custom1" style="height:100%;width:100%"></svg>
                    </div>


                </div>
            </div>
        </section>
    </div>
</div>

<!--------Yearwise pareto-->

<div class="row" id="Yearwise_rejection" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Yearwise Top 10 Rejection -Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_yearwise" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="monthpareto_mis" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_paretomonth"></span> </th>
                                <th class="centercls"> Month : <span id="month_date_paretomonth"></span> </th>
                            </tr>
                            <tr>
                                <th> Quality Issue </th>
                                <th> Frequency </th>
                                <th> Frequency %</th>
                            </tr>
                        </thead>
                        <tbody class="yearwise_rejection"></tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row" id="Yearly_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Yearwise Top 10 Rejection -Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">

                    <div id='yearwise_chart' style="height:600px;width:100%">
                        <svg class="custom1" style="height:100%;width:100%"></svg>
                    </div>

                </div>
            </div>
        </section>
    </div>
</div>

<!--------Custom pareto-->

<div class="row" id="Customwise_rejection" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Custom Top 10 Rejection -Table </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">
                    <table class="table table-bordered table-striped mb-none" id="datatable_customwise" data-swf-path="assets1/vendor/jquery-datatables/extras/TableTools/swf/copy_csv_xls_pdf.swf">
                        <thead style="background-color:teal;color:white;">
                            <tr id="custompareto_mis" style="display:none;">
                                <th class="centercls"> Machine : <span id="machine_name_paretocustom"></span> </th>
                                <th class="centercls"> From Date : <span id="customfrom_date_paretocustom"></span> </th>
                                <th class="centercls"> To Date : <span id="customto_date_paretocustom"></span> </th>
                            </tr>
                            <tr>
                                <th> Quality Issue </th>
                                <th> Frequency </th>
                                <th> Frequency %</th>
                            </tr>
                        </thead>
                        <tbody class="customwise_rejection"></tbody>
                    </table>
                </div>
            </div>
        </section>
    </div>
</div>

<div class="row" id="Custom_chart" style="display:none;">
    <div class="col-md-2"></div>
    <div class="col-md-12">
        <section class="panel">
            <header class="panel-heading" style="background-color:teal;color:white;">
                <div class="panel-actions">
                </div>
                <h2 class="panel-title" style="color:white;"> Custom Top 10 Rejection -Chart </h2>
            </header>
            <div class="panel-body">
                <div class="form-group">

                    <div id='customwise_chart' style="height:600px;width:100%">
                        <svg class="custom1" style="height:100%;width:100%"></svg>
                    </div>

                </div>
            </div>
        </section>
    </div>
</div>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<script src="~/assets1/javascripts/swal.js"></script>
<script src="~/assets1/javascripts/swal_alert.js"></script>
<script src="~/assets1/datepicker_normal/datepicker_normal_jquery.min.js"></script>
<script src="~/assets1/datepicker_normal/jquery-ui-1.8.19.custom.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>


<script type="text/javascript">

    $(".datepic").datepicker({
        format: "yyyy-mm-dd",
        orientation: "bottom",
        endDate: '+0d'
    });

    $('.monthpic').datepicker({
        format: "yyyy-mm",
        viewMode: "months",
        endDate: '+0m',
        minViewMode: "months",
        orientation: "bottom"
    });

    $('.yearpic').datepicker({
        minViewMode: 2,
        format: 'yyyy',
        startView: 2,
        endDate: '+0y',
        orientation: "bottom"
    });


    $(function () {
        var todaydt = new Date();
        $("#FromDate").datepicker({
            autoclose: true,
            endDate: todaydt,
            format: 'yyyy-mm-dd'
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            minDate.setDate(minDate.getDate());
            $('#ToDate').datepicker('setStartDate', minDate);
        });

        $("#ToDate").datepicker({
            autoclose: true,
            endDate: todaydt,
            format: 'yyyy-mm-dd'
        }).on('changeDate', function (selected) {
            var minDate = new Date(selected.date);
            minDate.setDate(minDate.getDate() - 1);
            $('#FromDate').datepicker('setEndDate', minDate);
        });
    });

</script>
<script>

</script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.updated_time').text("N/A");
        $('.shift').text("N/A");

        var URL = '@System.Configuration.ConfigurationManager.AppSettings["url"]';
        var CompanyCode = '@Session["CompanyCode"]';
        var PlantCode = '@Session["PlantCode"]';
        var LineCode = '@Session["LineCode"]';
        if (CompanyCode == "" && PlantCode == "" && LineCode == "") {
            swal({
                icon: "error",
                title: "Please Select Customer, Plant and Line...!",
                button: true,
                timer: 4500
            })
            return;
        }
        else
            if (CompanyCode == "") {
                swal({
                    icon: "error",
                    title: "Please Select Customer...!",
                    button: true,
                    timer: 4500
                })
                return;
            }
            else
                if (PlantCode == "") {
                    swal({
                        icon: "error",
                        title: "Please Select Plant...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
        if (LineCode == "") {
            swal({
                icon: "error",
                title: "Please Select Line...!",
                button: true,
                timer: 4500
            })
            return;
        }


        var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';
        var data_machine = {
             "Flag": "Subsystem",
                        "CompanyCode": '@Session["CompanyCode"]',
                        "PlantCode": '@Session["PlantCode"]',
                        "LineCode":'@Session["LineCode"]'
        };

        $.ajax({
            type: "POST",
            data: data_machine,
            headers: {
                Authorization: 'Bearer ' + user1
            },
            url: '@Url.Action("GetSettingdatas1", "Main")',
            dataType: "json",

            success: function (response)
            {

                var s = '<option value="">Select Machine</option>';
                for (var i = 0; i < response.data.length; i++) {
                    console.log(response.data.length);
                    if (response.data.length == 1) {
                        s += '<option value="' + response.data[i].Code + '" selected=selected>' + response.data[i].Name + '</option>';
                    }
                    else {
                        s += '<option value="' + response.data[i].Code + '">' + response.data[i].Code + "-" + response.data[i].Name + '</option>';
                    }
                }
                $("#Machine").html(s);
                    var Data1 = {
                        "QueryType": "ShiftSettings",
                        "Parameter1": '@Session["CompanyCode"]',
                        "Parameter": '@Session["PlantCode"]',
                        "Parameter2": '@Session["LineCode"]',
                         "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "LineCode": '@Session["LineCode"]'

                    };

                    $.ajax({
                        type: "POST",
                        url: URL + "api/Values/User_settings_details",
                        data: Data1,
                        headers: {
                            Authorization: 'Bearer ' + user1
                        },
                        dataType: "json",
                        success: function (response) {
                            var s = '<option value="">Select Shift</option>';
                            for (var i = 0; i < response.data.Table.length; i++) {
                                s += '<option value="' + response.data.Table[i].ShiftName + '">' + response.data.Table[i].ShiftName + '</option>';
                            }

                            $("#ShiftID").html(s);

                        },
                        error: function (response) {
                            //if (response.status == "401") {
                            //    swal({
                            //        icon: "warning",
                            //        title: "Session Expired",
                            //        button: true,
                            //        closeModal: false
                            //    })
                            //    window.location = R_url;
                            //}
                            //else {
                            //    swal({
                            //        icon: "warning",
                            //        title: response.responseText,
                            //        button: true,
                            //        closeModal: false
                            //    })

                            //}
                        }
                    });
            }
        })

    });

    $("#Machine").change(function ()
    {
        var URL = '@System.Configuration.ConfigurationManager.AppSettings["url"]';

        var Machine = $('#Machine').val();

        var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';

        var data = {
            "QueryType": "Get_Operators",
            "Parameter": Machine,
            "Parameter1": '@Session["CompanyCode"]',
            "Parameter2": '@Session["PlantCode"]',
             "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "LineCode": '@Session["LineCode"]'
        };

        $.ajax({
            type: "POST",
            data: data,
            headers: {
                Authorization: 'Bearer ' + user1
            },
            url: URL + "api/Values/User_settings_details",
            dataType: "json",

            success: function (response)
            {
                var s = '<option value="">Select Operator</option>';
                for (var i = 0; i < response.data.Table.length; i++) {
                    s += '<option value="' + response.data.Table[i].OperatorID + '">' + response.data.Table[i].OperatorName + '</option>';
                }
                $("#Operator").html(s);
            }
        })

        var data1 = {
            "QueryType": "Get_Variants",
            "Parameter": Machine,
            "Parameter1": '@Session["CompanyCode"]',
            "Parameter2": '@Session["PlantCode"]',
             "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "LineCode": '@Session["LineCode"]'
        };

        $.ajax({
            type: "POST",
            data: data1,
            headers: {
                Authorization: 'Bearer ' + user1
            },
            url: URL + "api/Values/User_settings_details",
            dataType: "json",

            success: function (response)
            {
                var s = '<option value="">Select Variant</option>';
                for (var i = 0; i < response.data.Table.length; i++) {
                    s += '<option value="' + response.data.Table[i].Variant_Code + '">' + response.data.Table[i].VariantName + '</option>';
                }
                $("#Variant").html(s);
            }
        })

        var data2 = {
            "QueryType": "Get_Reasons",
            "Parameter": Machine,
            "Parameter1": '@Session["CompanyCode"]',
            "Parameter2": '@Session["PlantCode"]',
             "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "LineCode": '@Session["LineCode"]'
        };

        $.ajax({
            type: "POST",
            data: data2,
            headers: {
                Authorization: 'Bearer ' + user1
            },
            url: URL + "api/Values/User_settings_details",
            dataType: "json",

            success: function (response)
            {
                console.log("reason:" + response);
                if (response != '') {
                    var s = '<option value="0">Select Reason</option>';
                    for (var i = 0; i < response.data.Table.length; i++) {
                        s += '<option value="' + response.data.Table[i].Reject_Reason + '">' + response.data.Table[i].Reject_Reason + '</option>';
                    }
                    $("#Reason").html(s);
                }
                else {

                }
            }
        })


        var data3 = {
            "QueryType": "Get_Subassemply",
            "Parameter": Machine,
            "Parameter1": '@Session["CompanyCode"]',
            "Parameter2": '@Session["PlantCode"]',
            "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "LineCode": '@Session["LineCode"]'
        };

        $.ajax({
            type: "POST",
            data: data3,
            headers: {
                Authorization: 'Bearer ' + user1
            },
            url: URL + "api/Values/User_settings_details",
            dataType: "json",

            success: function (response)
            {
                var s = '<option value="0">Select </option>';
                for (var i = 0; i < response.data.Table.length; i++) {
                    s += '<option value="' + response.data.Table[i].SubassemblyName + '">' + response.data.Table[i].SubassemblyName + '</option>';
                }
                $("#subassembly").html(s);
            }
        })

    });


    $("#Report_category").change(function ()
    {
        var URL = '@System.Configuration.ConfigurationManager.AppSettings["url"]';
        var Report_category = $('#Report_category').val();

        var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';

        var data3 = {
            "QueryType": "Get_Reports_list",
            "Parameter": Report_category,
            "Parameter1": '@Session["CompanyCode"]',
            "Parameter2": '@Session["PlantCode"]',
        };

        $.ajax({
            type: "POST",
            data: data3,
            headers: {
                Authorization: 'Bearer ' + user1
            },
            url: URL + "api/UserSettings/User_settings_details",
            dataType: "json",

            success: function (response)
            {
                var s = '<option value="">Select report</option>';
                for (var i = 0; i < response.data.Table.length; i++) {
                    s += '<option value="' + response.data.Table[i].Unique_id + '">' + response.data.Table[i].Report_name + '</option>';
                }
                $("#Report_name").html(s);
            }
        })
    });

    $("#Report_name").change(function () {
        var Report_name = $('#Report_name').val();

        if (Report_name == "4" || Report_name == "5" || Report_name == "6") {
            //var s = '<option value="0">Select </option>';
            //s += '<option value="1">Live</option>';
            var s = "";
            s += '<option value="2">Historic</option>';
            //s += '<option value="3">MIS</option>';
            $("#Report_type").html(s);
            $('#divreason').show();
        }
        else {
            var s = '';
            //s += '<option value="1">Live</option>';
            s += '<option value="2">Historic</option>';
            //s += '<option value="3">MIS</option>';
            $("#Report_type").html(s);
            $('#divreason').hide();
        }

        if (Report_name == "2" || Report_name == "3" || Report_name == "5") {

           // var s = '<option value="0">Select </option>';
            /* s += '<option value="1">Live</option>';*/
            var s = '';
            s += '<option value="2">Historic</option>';

            $("#Report_type").html(s);
        }
        if (Report_name == "9") {

            var s = '';

            s += '<option value="2">Historic</option>';

            $("#Report_type").html(s);
        }
        if (Report_name == "8") {


            var s = '';

            s += '<option value="2">Historic</option>';
          /*  s += '<option value="3">MIS</option>';*/


            $("#Report_type").html(s);


        }

        get_timeslot_data();

    });


    function load_time_slot() {
         var URL = '@System.Configuration.ConfigurationManager.AppSettings["url"]';
        var TimeSlot = $('#TimeSlot').val();


        if (TimeSlot == "1") {
            $('#divshift').show();
            $('#divday').hide();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#divcustom').hide();
        }
        else if (TimeSlot == "2") {
            $('#divshift').hide();
            $('#divday').show();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#divcustom').hide();
        }
        else if (TimeSlot == "3") {
            $('#divshift').hide();
            $('#divday').show();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#divcustom').hide();
        }
        else if (TimeSlot == "4") {
            $('#divshift').hide();
            $('#divday').hide();
            $('#divmonth').show();
            $('#divyear').hide();
            $('#divcustom').hide();
        }
        else if (TimeSlot == "5") {
            $('#divshift').hide();
            $('#divday').hide();
            $('#divmonth').hide();
            $('#divyear').show();
            $('#divcustom').hide();
        }
        else if (TimeSlot == "6") {
            $('#divshift').hide();
            $('#divday').hide();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#divcustom').show();
        }
        else {
            $('#divshift').hide();
            $('#divday').hide();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#divcustom').hide();
        }

    }

    function get_timeslot_data() {
        var Report_type = $('#Report_type').val();
        var Report_name = $('#Report_name').val();


        $('#divshift').hide();
        $('#divday').hide();
        $('#divmonth').hide();
        $('#divyear').hide();
        $('#divcustom').hide();



        if (Report_type == "1") {
            $('#divcurrent').show();

            $('#divall').hide();
            $('#divsome').hide();

            var s = '<option value="0">Select Report</option>';
            s += '<option value="1">Shift</option>';
            s += '<option value="2">Day</option>';

            s += '<option value="3">Week</option>';
            s += '<option value="4">Month</option>';

            s += '<option value="5">Year</option>';
            s += '<option value="6">Custom</option>';
            $("#TimeSlot").html(s);
            $('#TimeSlot').val('1');
        }

        else if (Report_type == "2" || Report_type == "3") {

            if (Report_name == "6" || Report_name == "7") {
                $('#divcurrent').hide();


                $('#divall').show();
                $('#TimeSlot').val('1');

                var s = '';
                s += '<option value="1">Shift</option>';

                $("#TimeSlot").html(s);
            }

            else if (Report_name == "8" || Report_name == "9") {
                $('#divcurrent').hide();


                $('#divall').show();
                $('#TimeSlot').val('0');

                var s = '<option value="0">Select Report</option>';
                s += '<option value="3">Week</option>';
                s += '<option value="4">Month</option>';

                s += '<option value="5">Year</option>';
                s += '<option value="6">Custom</option>';
                $("#TimeSlot").html(s);
            }

            else {
                $('#divall').show();
                $('#divcurrent').hide();

                $('#divsome').hide();
                $('#TimeSlot').val('0');

                var s = '<option value="0">Select Report</option>';
                s += '<option value="1">Shift</option>';
                s += '<option value="2">Day</option>';

                s += '<option value="3">Week</option>';
                s += '<option value="4">Month</option>';

                s += '<option value="5">Year</option>';
                s += '<option value="6">Custom</option>';

                $("#TimeSlot").html(s);

            }
        }

        load_time_slot();
    }

    $("#Report_type").change(function () {

        get_timeslot_data();
    });


    $("#TimeSlot").change(function () {
        load_time_slot();
    });

    document.getElementById("cancel").addEventListener("click", function () {4
        $("#TimeSlot").val(' ');
         $("#Report_name").val(' ');
         $("#ShiftDate").val(' ');
        $("#ShiftID").val(' ');
        $("#Machine").val('Select Machine');
        $("#Date").val(' ');
         $("#Month").val(' ');
        $("#Year").val(' ');
        $("#FromDate").val(' ');
         $("#ToDate").val(' ');
         $("#Reason").val(' ');
        $("#subassembly").val(' ');
        $("#Report_type").val(' ');


    })

</script>

@*<script>
        $(document).ready(function () {
            $('.updated_time').text("N/A");
            $('.shift').text("N/A");

            if ($.fn.DataTable.isDataTable('#datatable-default')) {
                $('#datatable-default').DataTable().destroy();
            }

            $('#datatable-default').DataTable({
                "responsive": true,
                "autoWidth": false,
                scrollY: true,
                scrollX: true,
                scroller: true
            });


        });
    </script>*@
<script>
    $(document).ready(function () {
        //$('#datatable_timestamp').DataTable();
        //$('#datatable_all_reason').DataTable();
    });
</script>
<!-- Hourly Quality trend % Chart-->
<script>

</script>

<script>

    document.getElementById("Search_QA").addEventListener("click", function () {
        var URL = '@System.Configuration.ConfigurationManager.AppSettings["url"]';
        var R_url = '@Url.Action("Login", "Main")';
        var user1 = '@Session["Token"]' + ':' + '@Session["UserName"]';
        var TimeSlot = $("#TimeSlot").val();
        var Report_name = $("#Report_name").val();
        var ShiftDate = $("#ShiftDate").val();
        var ShiftID = $("#ShiftID").val();
        var Machine = $("#Machine").val();
        var Date = $("#Date").val();
        var Month = $("#Month").val();
        var Year = $("#Year").val();
        var FDate = $("#FromDate").val();
        var TDate = $("#ToDate").val();
        var Reason = $("#Reason").val();
        var subassembly = $("#subassembly").val();
        var Report_type = $("#Report_type").val();



        $("#Hourly_Quality_trend").hide();
        $("#Hourly_Quality_trend_chart").hide();
        $("#Hourly_Quality_trend__per_chart").hide();
        $("#Shiftwise_Quality_trend").hide();
        $("#Shiftwise_Quality_trend_chart").hide();
        $("#Shiftwise_Quality_trend__per_chart").hide();
        $("#Monthwise_Quality_trend").hide();
        $("#Monthwise_Quality_trend_chart").hide();
        $("#Monthwise_Quality_trend__per_chart").hide();
        $("#Yearwise_Quality_trend").hide();
        $("#Yearwise_Quality_trend_chart").hide();
        $("#Yearwise_Quality_trend__per_chart").hide();
        $("#Custom_Quality_trend").hide();
        $("#Custom_Quality_trend_chart").hide();
        $("#Custom_Quality_trend__per_chart").hide();
        $("#Weekly_Quality_trend").hide();
        $("#Weekly_Quality_trend_chart").hide();
        $("#Weekly_Quality_trend__per_chart").hide();
        $("#Horly_Specific_trend").hide();
        $("#Daily_Specific_trend").hide();
        $("#Monthly_Specific_trend").hide();
        $("#Yearly_Specific_trend").hide();
        $("#Custom_Specific_trend").hide();
        $("#Week_Specific_trend").hide();
        $("#Hourly_Specific_trend_chart").hide();
        $("#Daily_Specific_trend_chart").hide();
        $("#Month_Specific_trend_chart").hide();
        $("#Year_Specific_trend_chart").hide();
        $("#Custom_Specific_trend_chart").hide();
        $("#Week_Specific_trend_chart").hide();
        $(".custom_pre_error").text('');
        $("#Specific_reason_timestamp").hide();
        $("#all_reason_timestamp").hide();
        $("#Daywise_rejection").hide();
        $("#Daywise_chart").hide();
        $("#Monthwise_rejection").hide();
        $("#Monthly_chart").hide();
        $("#Yearwise_rejection").hide();
        $("#Yearly_chart").hide();
        $("#Customwise_rejection").hide();
        $("#Custom_chart").hide();

        if (Report_name == "0") {
                    swal({
                        icon: "error",
                        title: "Please Select Report Name...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
        if (Report_type == "0") {
            swal({
                icon: "error",
                title: "Please Select Report Type...!",
                button: true,
                timer: 4500
            })
            return;
        }
        if (Machine == "") {
            swal({
                icon: "error",
                title: "Please Select Machine...!",
                button: true,
                timer: 4500
            })
            return;
        }


        //Shiftwise
        if (TimeSlot == "1") {

            if (Report_type != "1") {

                if (ShiftID == "0") {
                    swal({
                        icon: "error",
                        title: "Please Select Shift...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (ShiftDate == "") {
                    swal({
                        icon: "error",
                        title: "Please Select Date...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (TimeSlot == "0") {
                    swal({
                        icon: "error",
                        title: "Please Select TimeSlot...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
            }

            if (Report_name == "1") {
                var myData = {
                    "QueryType": "Shiftwise_data",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "shift": ShiftID,
                    "Date": ShiftDate,
                    "Machine": Machine,
                   /* "Report_type": Report_type*/
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetShiftwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Hourly_Quality_trend").show();
                        $("#Hourly_Quality_trend_chart").hide();
                        $("#Hourly_Quality_trend__per_chart").hide();


                            var rowsCnt = document.getElementById("datatable_default").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                            if (rowsCnt > 0) {
                                for (var i = 0; i < rowsCnt; i++) {
                                    document.getElementById("datatable_default").deleteRow(2);
                                }
                        }

                        if ($.fn.DataTable.isDataTable('#datatable_default')) {
                            $('#datatable_default').DataTable().clear();
                        }

                        if ($.fn.DataTable.isDataTable('#datatable_default')) {
                            $('#datatable_default').DataTable().destroy();
                        }

                        if (response.status != "Error") {
                            var j = 1;
                            if (Report_type == "3") {
                                //alert(ShiftID)
                                $("#hourly_mis").show();
                                $("#machine_name").html(Machine);
                                $("#shift_name").html(ShiftID);
                                $("#shift_date").html(ShiftDate);
                            }
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Hour + "</td> ";
                                cols += "<td> " + response.data.Table[i].Shift + "</td> ";
                                cols += "<td> " + response.data.Table[i].Variant + "</td> ";
                                cols += "<td> " + response.data.Table[i].Batch + "</td> ";
                                cols += "<td> " + response.data.Table[i].okparts + "</td> ";
                                cols += "<td> " + response.data.Table[i].nokparts + "</td> ";
                                cols += "<td> " + response.data.Table[i].start + "</td> ";
                                cols += "<td> " + response.data.Table[i].end + "</td> ";
                                cols += "<td> " + response.data.Table[i].Quality + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".details").append(newRow);
                                j++;
                            }

                            $('#datatable_default').DataTable({
                                "responsive": true,
                                "autoWidth": false,
                                "scrollCollapse": true,
                                dom: 'Bfrtip',
                                buttons: [
                                    'csv', 'excel'
                                ]
                            });
                        }

                        else {

                        $(".custom_pre_error").text(response.msg);

                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_default', 'Hourly_Quality_trend');
                            }
                            else {
                                $(".custom_pre_error").text(response.msg);
                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "2") {

                var myData = {
                    "QueryType": "Shiftwise_chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "shift": ShiftID,
                    "Date": ShiftDate,
                    "Machine": Machine,
                    "Report_type": Report_type
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetShiftwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Hourly_Quality_trend").hide();
                        $("#Hourly_Quality_trend_chart").show();
                        $("#Hourly_Quality_trend__per_chart").hide();
                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Hourly_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409", "#F7DB26"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.Hour; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();
                            var tooltip = d3.select("#container")
                                .append("div")
                                .style("opacity", 0)
                                .attr("class", "tooltip")
                                .style("background-color", "tranparent")
                                .style("border", "solid")
                                .style("border-width", "2px")
                                .style("border-radius", "5px")
                                .style("padding", "5px")

                            tooltip = d3.select("body").append("div").style("width", "150px").style("height", "30px").style("background", "white")
                                .style("opacity", "1").style("position", "absolute").style("visibility", "hidden").style("padding", "5px");
                            toolval = tooltip.append("div");

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.Hour) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); })

                                .on("mouseout", function () {
                                    d3.select(this).style("stroke", "none");
                                    tooltip.style("visibility", "hidden");
                                })

                                .on("mousemove", function (d) {
                                    tooltip.style("visibility", "visible")
                                        .style("top", (d3.event.pageY - 10) + "px").style("left", (d3.event.pageX + 5) + "px");

                                    var text = 'Quantity: ' + d.value + ' <br/> ';

                                    tooltip.select("div").html(text)

                                })

                                .on('mouseleave', function () {
                                    d3.selectAll('.value')
                                        .attr('opacity', 1)

                                    d3.select(this)
                                        .transition()
                                        .duration(300)
                                        .attr('opacity', 1)
                                        .attr('x', (a) => xScale(a.Alarm_Description))
                                        .attr('width', xScale.bandwidth())

                                    chart.selectAll('#limit').remove()
                                    chart.selectAll('.divergence').remove()
                                    chart.selectAll('.value').remove()
                                })

                            g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Hour");
                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "-4em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "middle")
                                .attr('transform', 'rotate(-90)')
                                .text("Quantity");

                    }
                     else {

                         var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                             width = 960 - margin.left - margin.right,
                             height = 800 - margin.top - margin.bottom;

                         var svg = d3.select(".Hourly_trend").append("svg")
                             .attr("width", width + margin.left + margin.right)
                             .attr("height", height + margin.top + margin.bottom)
                             .append("g")
                             .attr("transform",
                                 "translate(" + margin.left + "," + margin.top + ")");
                         svg.append("text")
                             .text("No Data Available")
                             .style("font-size", "40px");
                         return;

                    }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "3") {
                var myData = {
                    "QueryType": "Shiftwise_%chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "shift": ShiftID,
                    "Date": ShiftDate,
                    "Machine": Machine,
                    "Report_type": Report_type
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetShiftwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Hourly_Quality_trend").hide();
                        $("#Hourly_Quality_trend_chart").hide();
                        $("#Hourly_Quality_trend__per_chart").show();

                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                        var svg = d3.select(".Hourly_trend_percentage").append("svg")
                            .attr("width", width + margin.left + margin.right)
                            .attr("height", height + margin.top + margin.bottom)
                            .append("g")
                            .attr("transform",
                                "translate(" + margin.left + "," + margin.top + ")");

                        var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                        var x0 = d3.scaleBand()
                            .rangeRound([0, width])
                            .paddingInner(0.1);

                        var x1 = d3.scaleBand()
                            .padding(0.05);

                        var y = d3.scaleLinear()
                            .rangeRound([height, 0]);

                        var z = d3.scaleOrdinal()
                            .range(["#0993F3", "#F31409"]);

                        var vals = response.data.Table;

                        data = vals;

                        var keys = Object.keys(data[0]).slice(1);

                        x0.domain(data.map(function (d) { return d.Hour; }));
                        x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                        y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();
                            var tooltip = d3.select("#container")
                                .append("div")
                                .style("opacity", 0)
                                .attr("class", "tooltip")
                                .style("background-color", "tranparent")
                                .style("border", "solid")
                                .style("border-width", "2px")
                                .style("border-radius", "5px")
                                .style("padding", "5px")

                            tooltip = d3.select("body").append("div").style("width", "200px").style("height", "30px").style("background", "white")
                                .style("opacity", "1").style("position", "absolute").style("visibility", "hidden").style("padding", "5px");
                            toolval = tooltip.append("div");
                        g.append("g")
                            .selectAll("g")
                            .data(data)
                            .enter().append("g")
                            .attr("transform", function (d) { return "translate(" + x0(d.Hour) + ",0)"; })
                            .selectAll("rect")
                            .data(function (d) {
                                debugger;
                                return keys.map(function (key) {
                                    return { key: key, value: d[key] };
                                });
                            })
                            .enter().append("rect")
                            .attr("x", function (d) { return x1(d.key); })
                            .attr("y", function (d) { return y(d.value); })
                            .attr("width", x1.bandwidth())
                            .attr("height", function (d) { return height - y(d.value); })
                            .attr("fill", function (d) { return z(d.key); })
                                .on("mouseout", function () {
                                    d3.select(this).style("stroke", "none");
                                    tooltip.style("visibility", "hidden");
                                })
                                .on("mousemove", function (d) {
                                    tooltip.style("visibility", "visible")
                                        .style("top", (d3.event.pageY - 10) + "px").style("left", (d3.event.pageX + 5) + "px");

                                    var text = 'Quantity: ' + d.value + ' <br/> ';

                                    tooltip.select("div").html(text)

                                })

                                .on('mouseleave', function () {
                                    d3.selectAll('.value')
                                        .attr('opacity', 1)

                                    d3.select(this)
                                        .transition()
                                        .duration(300)
                                        .attr('opacity', 1)
                                        .attr('x', (a) => xScale(a.Alarm_Description))
                                        .attr('width', xScale.bandwidth())

                                    chart.selectAll('#limit').remove()
                                    chart.selectAll('.divergence').remove()
                                    chart.selectAll('.value').remove()
                                })
                            g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Hour");


                        g.append("g")
                            .attr("class", "axis")
                            .call(d3.axisLeft(y).ticks(null, "s"))
                            .append("text")
                            .attr("x", 2)
                            .attr("y", y(y.ticks().pop()) + 0.5)
                            .attr("dy", "-4em")
                            .attr("fill", "#000")
                            .attr("font-weight", "bold")
                            .attr('transform', 'rotate(-90)')
                            .attr("text-anchor", "end")
                            .text("Quantity");
                        }
                        else {

                            var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Hourly_trend_percentage").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");
                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");
                            return;
                    }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "4") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "linecode": '@Session["LineCode"]',
                    "shift": ShiftID,
                    "Date": ShiftDate,
                    "Machinecode": Machine,
                    "RejectReason": Reason,
                    "Report_type": Report_type,
                    "subassembly": subassembly
                };
                console.log(myData);
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_hourly',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Hourly_Quality_trend").hide();
                        $("#Hourly_Quality_trend_chart").hide();
                        $("#Hourly_Quality_trend__per_chart").hide();
                        $("#Horly_Specific_trend").show();

                        var rowsCnt = document.getElementById("datatable_specific_hour").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_specific_hour").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#hourlyreason_mis").show();
                                $("#machine_name_reason").html(Machine);
                                $("#shift_name_reason").html(ShiftID);
                                $("#shift_date_reason").html(ShiftDate);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Hour + "</td> ";
                                cols += "<td> " + response.data.Table[i].NoofRej + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurense_per + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".Specific_hourly_details").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }


                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_specific_hour', 'Hourly_Specific_reason');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: response.msg,
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "5") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "linecode": '@Session["LineCode"]',
                    "shift": ShiftID,
                    "Date": ShiftDate,
                    "Machinecode": Machine,
                    "RejectReason": Reason,
                    "Report_type": Report_type
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_hourly',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        $("#Hourly_Specific_trend_chart").show();
                        d3.select("svg").remove();
                        if (response.status != "Error") {

                            sample = response.data.Table;
                            d3.select("#container").append("svg");
                            const svg = d3.select('svg');
                            const svgContainer = d3.select('#container');

                            const a = $('#container').height();
                            const b = $('#container').width();

                            const margin = 150;
                            const width = b - 2 * margin;
                            const height = a - 2 * margin;

                            //const margin = 80;
                            //const width = 1000 - 2 * margin;
                            //const height = 700 - 2 * margin;

                            const chart = svg.append('g')
                                .attr('transform', `translate(${margin}, ${margin})`);

                            const xScale = d3.scaleBand()
                                .range([0, width])
                                .domain(sample.map((s) => s.Hour))
                                .padding(0.4)

                            const yScale = d3.scaleLinear()
                                .range([height, 0])
                                .domain([0, d3.max(response.data.Table, function (d) { return d.NoofRej; })])

                            const makeYLines = () => d3.axisLeft()
                                .scale(yScale)

                            var tooltip = d3.select("#container")
                                .append("div")
                                .style("opacity", 0)
                                .attr("class", "tooltip")
                                .style("background-color", "tranparent")
                                .style("border", "solid")
                                .style("border-width", "2px")
                                .style("border-radius", "5px")
                                .style("padding", "5px")

                            tooltip = d3.select("body").append("div").style("width", "150px").style("height", "60px").style("background", "white")
                                .style("opacity", "1").style("position", "absolute").style("visibility", "hidden").style("padding", "5px");
                            toolval = tooltip.append("div");

                            chart.append('g')
                                .attr('transform', `translate(10, ${height})`)
                                .call(d3.axisBottom(xScale))
                                .selectAll("text")
                                .style("text-anchor", "end")
                                .attr("dx", "-.8em")
                                .attr("dy", ".15em")
                                .attr("transform", function (d) {
                                    return "rotate(-25)"
                                });

                            chart.append('g')
                                .call(d3.axisLeft(yScale));

                            chart.append('g')
                                .attr('class', 'grid')
                                .call(makeYLines()
                                    .tickSize(-width, 0, 0)
                                    .tickFormat('')
                                )


                            const barGroups = chart.selectAll()
                                .data(sample)
                                .enter()
                                .append('g')


                            barGroups
                                .append('rect')
                                .attr('class', 'bar')
                                .attr('x', (g) => xScale(g.Hour))
                                .attr('y', (g) => yScale(g.NoofRej))
                                .attr('height', (g) => height - yScale(g.NoofRej))
                                .attr('width', xScale.bandwidth())

                                .on('mouseenter', function (actual, i) {
                                    d3.selectAll('.value')
                                        .attr('opacity', 0)

                                    d3.select(this)
                                        .transition()
                                        .duration(300)
                                        .delay(300)
                                        .attr('opacity', 0.6)
                                        .attr('x', (a) => xScale(a.Hour) - 5)
                                        .attr('width', xScale.bandwidth() + 10)

                                    const y = yScale(actual.NoofRej)

                                    line = chart.append('line')
                                        .attr('id', 'limit')
                                        .attr('x1', 0)
                                        .attr('y1', y)
                                        .attr('x2', width)
                                        .attr('y2', y)

                                    barGroups.append('text')
                                        .attr('class', 'value')
                                        .attr('x', (a) => xScale(a.Hour) + xScale.bandwidth() / 2)
                                        .attr('y', (a) => yScale(a.NoofRej) + 30)
                                        .attr('text-anchor', 'middle')
                                        .text((a) => `${a.NoofRej}`)

                                })

                                .on("mouseout", function () {
                                    d3.select(this).style("stroke", "none");
                                    tooltip.style("visibility", "hidden");
                                })

                                .on("mousemove", function (d) {
                                    tooltip.style("visibility", "visible")
                                        .style("top", (d3.event.pageY - 10) + "px").style("left", (d3.event.pageX + 5) + "px");

                                    var text = 'Hour: ' + d.Hour + ' <br/> No of Rejections: ' + d.NoofRej + '';

                                    tooltip.select("div").html(text)

                                })

                                .on('mouseleave', function () {
                                    d3.selectAll('.value')
                                        .attr('opacity', 1)

                                    d3.select(this)
                                        .transition()
                                        .duration(300)
                                        .attr('opacity', 1)
                                        .attr('x', (a) => xScale(a.Hour))
                                        .attr('width', xScale.bandwidth())

                                    chart.selectAll('#limit').remove()
                                    chart.selectAll('.divergence').remove()
                                    chart.selectAll('.value').remove()
                                })

                            barGroups
                                .append('text')
                                .attr('class', 'value')
                                .attr('x', (a) => xScale(a.Hour) + xScale.bandwidth() / 2)
                                .attr('y', (a) => yScale(a.NoofRej) + -10)
                                .attr('text-anchor', 'middle')
                                .text((a) => `${a.NoofRej}`)

                            svg.append('text')
                                .attr('class', 'label')
                                .attr('x', -(height / 2) - margin)
                                .attr('y', margin / 2.4)
                                //.attr('transform', 'rotate(-90)')
                                .attr('text-anchor', 'middle')
                                //.text('Time(in minutes)')
                                .text('NoofRej')

                            svg.append('text')
                                .attr('class', 'label')
                                .attr('x', width / 2 + margin)
                                .attr('y', height + margin * 1.7)
                                .attr('text-anchor', 'middle')
                                .text("")
                        }
                        else {
                            $("#container").empty();

                            var div_width = 400;
                            var div_height = 400;
                            var svg = d3.select("#container").append("svg")
                                .attr("width", div_width)
                                .attr("height", div_height)
                                .attr("preserveAspectRatio", "xMidYMid")
                                .append("g")
                                .attr("transform", "translate(" + (div_width / 2 - 50) + "," + (div_height / 2 - 50) + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");
                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Timeout",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: response.responseText,
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "6") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Shift_id": ShiftID,
                    "Date": ShiftDate,
                    "Machine": Machine,
                    "Reason": Reason,
                    "Report_type": Report_type
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_timestamp',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        console.log(response);

                        $("#Specific_reason_timestamp").show();

                        var rowsCnt = document.getElementById("datatable_timestamp").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_timestamp").deleteRow(1);
                            }
                        }

                        if ($.fn.DataTable.isDataTable('#datatable_timestamp')) {
                            $('#datatable_timestamp').DataTable().clear();
                        }

                        if ($.fn.DataTable.isDataTable('#datatable_timestamp')) {
                            $('#datatable_timestamp').DataTable().destroy();
                        }
                        if (response.status != "Error") {
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Time_Stamp + "</td> ";
                                cols += "<td> " + response.data.Table[i].Operatorname + "</td> ";
                                cols += "<td> " + response.data.Table[i].Variant_Code + "</td> ";
                                cols += "<td> " + response.data.Table[i].Ok_Parts + "</td> ";
                                cols += "<td> " + response.data.Table[i].NOk_Parts + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".timestamp_details").append(newRow);
                                j++;
                            }
                            $('#datatable_timestamp').DataTable({
                                "responsive": true,
                                "autoWidth": false,
                                "scrollCollapse": true,
                                dom: 'Bfrtip',
                                buttons: [
                                    'csv', 'excel'
                                ]
                            });
                        }
                        else {

                            $(".custom_timestamp_error").text(response.msg);

                        }
                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_timestamp', 'Specific_Reason_Timestamp');
                            }
                            else {

                                $(".custom_timestamp_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "SomeThing went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "7") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Shift_id": ShiftID,
                    "Date": ShiftDate,
                    "Machine": Machine,
                    "Reason": "all",
                    "Report_type": Report_type
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_timestamp',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        console.log(response);
                        $("#all_reason_timestamp").show();

                        var rowsCnt = document.getElementById("datatable_all_reason").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_all_reason").deleteRow(1);
                            }
                        }

                        if ($.fn.DataTable.isDataTable('#datatable_all_reason')) {
                            $('#datatable_all_reason').DataTable().clear();
                        }

                        if ($.fn.DataTable.isDataTable('#datatable_all_reason')) {
                            $('#datatable_all_reason').DataTable().destroy();
                        }

                        if (response.status != "Error") {
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Time_Stamp + "</td> ";
                                cols += "<td> " + response.data.Table[i].Operatorname + "</td> ";
                                cols += "<td> " + response.data.Table[i].Variant_Code + "</td> ";
                                cols += "<td> " + response.data.Table[i].Ok_Parts + "</td> ";
                                cols += "<td> " + response.data.Table[i].NOk_Parts + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".all_timestamp_details").append(newRow);
                                j++;
                            }
                            $('#datatable_all_reason').DataTable({
                                "responsive": true,
                                "autoWidth": false,
                                "scrollCollapse": true,
                                dom: 'Bfrtip',
                                buttons: [
                                    'csv', 'excel'
                                ]
                            });
                        }

                        else {

                            $(".custom_all_timestamp_error").text(response.msg);

                        }
                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_all_reason', 'all_Reason_Timestamp');
                            }
                            else {
                                $(".custom_all_timestamp_error").text(response.msg);
                            }

                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

        }

        //Daywise
        else if (TimeSlot == "2") {
            if (Report_type > 1) {
                if (Date == "") {
                    swal({
                        icon: "error",
                        title: "Please Select Date...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (TimeSlot == "0") {
                    swal({
                        icon: "error",
                        title: "Please Select TimeSlot...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
            }
            if (Report_name == "1") {
                var myData = {
                    "QueryType": "Daywise_table",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetDaywise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Shiftwise_Quality_trend").show();
                        $("#Shiftwise_Quality_trend_chart").hide();
                        $("#Shiftwise_Quality_trend__per_chart").hide();

                        var rowsCnt = document.getElementById("datatable_shiftwise").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_shiftwise").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#daywise_mis").show();
                                $("#machine_name_day").html(Machine);
                                $("#shift_date_day").html(Date);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].ShiftID + "</td> ";
                                cols += "<td> " + response.data.Table[i].Starttime + "</td> ";
                                cols += "<td> " + response.data.Table[i].Endtime + "</td> ";
                                cols += "<td> " + response.data.Table[i].target_qty + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalOkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalNokParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalReworkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].Firstpassyeild + "</td> ";
                                cols += "<td> " + response.data.Table[i].Rework_Percentage + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".shiftwise_details").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {

                                exportTableToExcel('datatable_shiftwise', 'Shitwise_Quality_trend');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "2") {
                var myData = {
                    "QueryType": "Daywise_chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetDaywise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Shiftwise_Quality_trend").hide();
                        $("#Shiftwise_Quality_trend_chart").show();
                        $("#Shiftwise_Quality_trend__per_chart").hide();
                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Shiftwise_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409", "#F7DB26"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.ShiftID; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.ShiftID) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); });

                            g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Shift ID");

                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Quantity");

                        //var legend = g.append("g")
                        //    .attr("font-family", "sans-serif")
                        //    .attr("font-size", 10)
                        //    .attr("text-anchor", "end")
                        //    .selectAll("g")
                        //    .data(keys.slice().reverse())
                        //    .enter().append("g")
                        //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                        //legend.append("rect")
                        //    .attr("x", width - 19)
                        //    .attr("width", 19)
                        //    .attr("height", 19)
                        //    .attr("fill", z);

                        //legend.append("text")
                        //    .attr("x", width - 24)
                        //    .attr("y", 9.5)
                        //    .attr("dy", "0.32em")
                        //    .text(function (d) { return d; });
                    }
                    else{
                            var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Shiftwise_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");

                            return;
                    }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "3") {
                var myData = {
                    "QueryType": "Daywise_%chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetDaywise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Shiftwise_Quality_trend").hide();
                        $("#Shiftwise_Quality_trend_chart").hide();
                        $("#Shiftwise_Quality_trend__per_chart").show();
                        if (response.status != "Error") {
                            var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Shiftwise_trend_percentage").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.ShiftID; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.ShiftID) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); });

                             g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                 .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Shift ID");

                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Quantity");

                            //var legend = g.append("g")
                            //    .attr("font-family", "sans-serif")
                            //    .attr("font-size", 10)
                            //    .attr("text-anchor", "end")
                            //    .selectAll("g")
                            //    .data(keys.slice().reverse())
                            //    .enter().append("g")
                            //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                            //legend.append("rect")
                            //    .attr("x", width - 19)
                            //    .attr("width", 19)
                            //    .attr("height", 19)
                            //    .attr("fill", z);

                            //legend.append("text")
                            //    .attr("x", width - 24)
                            //    .attr("y", 9.5)
                            //    .attr("dy", "0.32em")
                            //    .text(function (d) { return d; });

                        }
                        else {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Shiftwise_trend_percentage").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");

                            return;
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "4") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_daywise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Daily_Specific_trend").show();

                        var rowsCnt = document.getElementById("datatable_specific_day").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_specific_day").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#daywise_reason").show();
                                $("#machine_name_dayreason").html(Machine);
                                $("#day_date_dayreason").html(Date);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].ShiftID + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance_per + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".Specific_shift_details").append(newRow);
                                j++;
                            }
                        }

                        else {

                            $(".custom_pre_error").text(response.msg);

                        }
                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_specific_day', 'Shiftwise_Specific_reason');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "5") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_daywise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();

                        $("#Daily_Specific_trend_chart").show();

                        // If data is not available
                        if (typeof response.data.Table === "undefined") {

                            // Output error
                            $(".Shift_chart_specific").text("No Data Available.");

                            // Otherwise
                        } else {

                            var data = response.data.Table;
                            // Set SVGs dimensions and margins
                            var margin = { top: 20, right: 20, bottom: 30, left: 50 },
                                width = 960 - margin.left - margin.right,
                                height = 300 - margin.top - margin.bottom;

                            // Setup ranges
                            var x = d3.scaleBand().range([0, width]),
                                y = d3.scaleLinear().range([height, 0]);


                            // Setup line
                            var valueline = d3.line()
                                .x(function (d) { return x(d.ShiftID); })
                                .y(function (d) { return y(d.Occurance); });

                            // Setup tooltips
                            var div = d3.select(".Shift_chart_specific").append("div")
                                .attr("class", "tooltip")
                                .style("opacity", 0);

                            // Append SVG to container DIV, append group to SVG
                            var svg = d3.select(".Shift_chart_specific").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate( " + margin.left + ", " + margin.top + " )");

                            // Format the data
                            data.forEach(function (d) {
                                d.ShiftID = d.ShiftID;
                                d.Occurance = +d.Occurance;
                            });

                            x.domain(data.map(function (d) { return d.ShiftID; }));

                            y.domain([0, d3.max(data, function (d) { return d.Occurance; })]);

                            // Append the line to the graph
                            svg.append("path")
                                .data([data])
                                .attr("class", "line")
                                .attr("d", valueline);

                            // Append tooltips to the graph
                            svg.selectAll("dot")
                                .data(data)
                                .enter().append("circle")
                                .attr("class", "node")
                                .attr("r", 5)
                                .attr("cx", function (d) { return x(d.ShiftID); })
                                .attr("cy", function (d) { return y(d.Occurance); })
                                .on("mouseover", function (d) {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 1);
                                    div.html(d.ShiftID + "<br/>" + d.Occurance)
                                })
                                .on("mousemove", function () {
                                    return div
                                        .style("top", (d3.event.pageY + 16) + "px")
                                        .style("left", (d3.event.pageX + 16) + "px");
                                })
                                .on("mouseout", function () {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 0);
                                });

                            // Append X Axis to the graph
                            svg.append("g")
                                .attr("transform", "translate( 0," + height + " )")
                                .call(d3.axisBottom(x))
                                .append("text")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "middle")
                                .attr('x', 450)
                                .attr('y', 40)
                                .text("ShiftID");

                            // Append Y Axis to the graph
                            svg.append("g")
                                .call(d3.axisLeft(y))
                                .append("text")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("occurrence");
                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
        }

        //Monthwise
        else if (TimeSlot == "4") {
            if (Report_type > 1) {
                if (Month == "") {
                    swal({
                        icon: "error",
                        title: "Please Select Month...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (TimeSlot == "0") {
                    swal({
                        icon: "error",
                        title: "Please Select TimeSlot...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
            }
            if (Report_name == "1") {
                var myData = {
                    "QueryType": "Weekwise_table",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Month,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetMonthwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Monthwise_Quality_trend").show();
                        $("#Monthwise_Quality_trend_chart").hide();
                        $("#Monthwise_Quality_trend__per_chart").hide();

                        var rowsCnt = document.getElementById("datatable_weekwise").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_weekwise").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#weekwise_mis").show();
                                $("#machine_name_week").html(Machine);
                                $("#week_date_week").html(Month);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Week + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalOkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalNokParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalReworkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].Firstpassyeild + "</td> ";
                                cols += "<td> " + response.data.Table[i].Rework_Percentage + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".monthwise_details").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_weekwise', 'Monthly_Quality_trend');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "2") {
                var myData = {
                    "QueryType": "Weekwise_chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Month,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetMonthwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Monthwise_Quality_trend").hide();
                        $("#Monthwise_Quality_trend_chart").show();
                        $("#Monthwise_Quality_trend__per_chart").hide();
                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Monthwise_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409", "#F7DB26"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.Week; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.Week) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); });

                            g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Week");

                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Quantity");

                            //var legend = g.append("g")
                            //    .attr("font-family", "sans-serif")
                            //    .attr("font-size", 10)
                            //    .attr("text-anchor", "end")
                            //    .selectAll("g")
                            //    .data(keys.slice().reverse())
                            //    .enter().append("g")
                            //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                            //legend.append("rect")
                            //    .attr("x", width - 19)
                            //    .attr("width", 19)
                            //    .attr("height", 19)
                            //    .attr("fill", z);

                            //legend.append("text")
                            //    .attr("x", width - 24)
                            //    .attr("y", 9.5)
                            //    .attr("dy", "0.32em")
                            //    .text(function (d) { return d; });
                        }
                        else {
                            var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Monthwise_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");


                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "3") {
                var myData = {
                    "QueryType": "Weekwise_%chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Month,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetMonthwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Monthwise_Quality_trend").hide();
                        $("#Monthwise_Quality_trend_chart").hide();
                        $("#Monthwise_Quality_trend__per_chart").show();
                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Monthwise_trend_percentage").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.Week; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.Week) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); });

                             g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                 .text("Week");

                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Quantity");

                            //var legend = g.append("g")
                            //    .attr("font-family", "sans-serif")
                            //    .attr("font-size", 10)
                            //    .attr("text-anchor", "end")
                            //    .selectAll("g")
                            //    .data(keys.slice().reverse())
                            //    .enter().append("g")
                            //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                            //legend.append("rect")
                            //    .attr("x", width - 19)
                            //    .attr("width", 19)
                            //    .attr("height", 19)
                            //    .attr("fill", z);

                            //legend.append("text")
                            //    .attr("x", width - 24)
                            //    .attr("y", 9.5)
                            //    .attr("dy", "0.32em")
                            //    .text(function (d) { return d; });


                        }
                        else {

                        var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                        width = 960 - margin.left - margin.right,
                        height = 800 - margin.top - margin.bottom;

                        var svg = d3.select(".Monthwise_trend_percentage").append("svg")
                            .attr("width", width + margin.left + margin.right)
                            .attr("height", height + margin.top + margin.bottom)
                            .append("g")
                            .attr("transform",
                                "translate(" + margin.left + "," + margin.top + ")");
                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");


                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }


            else if (Report_name == "4") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Month,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_monthwise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Monthly_Specific_trend").show();

                        var rowsCnt = document.getElementById("datatable_specific_week").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_specific_week").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#weekwise_reason").show();
                                $("#machine_name_weekreason").html(Machine);
                                $("#week_date_weekreason").html(Date);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Week + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance_per + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".Specific_week_details").append(newRow);
                                j++;
                            }
                        }

                        else {

                            $(".custom_pre_error").text(response.msg);

                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_specific_week', 'Monthly_Specific_reason');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

             else if (Report_name == "5") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Month,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_monthwise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();

                        $("#Month_Specific_trend_chart").show();

                        // If data is not available
                        if (typeof response.data.Table === "undefined") {

                            // Output error
                            $(".Month_chart_specific").text("No Data Available.");

                            // Otherwise
                        } else {

                            var data = response.data.Table;
                            // Set SVGs dimensions and margins
                            var margin = { top: 20, right: 20, bottom: 30, left: 50 },
                                width = 960 - margin.left - margin.right,
                                height = 300 - margin.top - margin.bottom;

                            // Setup ranges
                            var x = d3.scaleBand().range([0, width]),
                                y = d3.scaleLinear().range([height, 0]);


                            // Setup line
                            var valueline = d3.line()
                                .x(function (d) { return x(d.Week); })
                                .y(function (d) { return y(d.Occurance); });

                            // Setup tooltips
                            var div = d3.select(".Month_chart_specific").append("div")
                                .attr("class", "tooltip")
                                .style("opacity", 0);

                            // Append SVG to container DIV, append group to SVG
                            var svg = d3.select(".Month_chart_specific").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate( " + margin.left + ", " + margin.top + " )");

                            // Format the data
                            data.forEach(function (d) {
                                d.Week = d.Week;
                                d.Occurance = +d.Occurance;
                            });

                            x.domain(data.map(function (d) { return d.Week; }));

                            y.domain([0, d3.max(data, function (d) { return d.Occurance; })]);

                            // Append the line to the graph
                            svg.append("path")
                                .data([data])
                                .attr("class", "line")
                                .attr("d", valueline);

                            // Append tooltips to the graph
                            svg.selectAll("dot")
                                .data(data)
                                .enter().append("circle")
                                .attr("class", "node")
                                .attr("r", 5)
                                .attr("cx", function (d) { return x(d.Week); })
                                .attr("cy", function (d) { return y(d.Occurance); })
                                .on("mouseover", function (d) {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 1);
                                    div.html(d.Week + "<br/>" + d.Occurance)
                                })
                                .on("mousemove", function () {
                                    return div
                                        .style("top", (d3.event.pageY + 16) + "px")
                                        .style("left", (d3.event.pageX + 16) + "px");
                                })
                                .on("mouseout", function () {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 0);
                                });

                            // Append X Axis to the graph
                            svg.append("g")
                                .attr("transform", "translate( 0," + height + " )")
                                .call(d3.axisBottom(x))
                                .append("text")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "middle")
                                .attr('x', 450)
                                .attr('y', 40)
                                .text("Week");

                            // Append Y Axis to the graph
                            svg.append("g")
                                .call(d3.axisLeft(y))
                                .append("text")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("occurrence");
                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "8") {
                var myData = {
                    "line": '@Session["LineCode"]',
                    "machine": Machine,
                    "Year": Month,
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                };

                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetRejection_Pareto_MonthwiseReport',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        //$(".monthwise_rejection").dataTable().Destroy();
                        $("#Monthwise_rejection").show();

                        var rowsCnt = document.getElementById("datatable_monthwise").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_monthwise").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {

                            if (Report_type == "3") {

                                $("#weekpareto_mis").show();
                                $("#machine_name_paretoweek").html(Machine);

                                $("#week_date_paretoweek").html(Month);
                            }
                            var Frequency_tot = 0;

                            for (var i = 0; i < response.data.Table.length; i++) {
                                Frequency_tot += response.data.Table[i].Frequency;
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                cols += "<td> " + response.data.Table[i].RejectionDescription + "</td> ";
                                cols += "<td> " + response.data.Table[i].Frequency + "</td> ";
                                cols += "<td> " + ((response.data.Table[i].Frequency * 100) / Frequency_tot).toFixed() + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".monthwise_rejection").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }
                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_monthwise', 'Monthly_Top10 Rejection_trend');
                            }
                            else {
                                $(".custom_pre_error").text(response.msg);
                            }

                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "9") {
                var myData = {
                    "line": '@Session["LineCode"]',
                    "machine": Machine,
                    "Year": Month,
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                };

                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetRejection_Pareto_MonthwiseReport',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        $("#Monthly_chart").show();

                        d3.select("#monthwise_chart svg").remove();

                        if (response.status != "Error") {

                            const a = $('#monthwise_chart').height();
                            const b = $('#monthwise_chart').width();


                            sample_pareto = response.data.Table;
                            var m = { top: 25, right: 50, bottom: 150, left: 50 }
                                , h = a - m.top - m.bottom - 25
                                , w = b - m.left - m.right
                                , barWidth = 5;

                            var dataset = null;
                            //typecast Amount to #, calculate total, and cumulative amounts


                            //Axes and scales
                            var xScale = d3.scaleBand().rangeRound([0, w], 0.1);
                            xScale.domain(sample_pareto.map(function (d) { return d.RejectionDescription; }));

                            var yhist = d3.scaleLinear()
                                .domain([0, d3.max(sample_pareto, function (d) { return d.Frequency; })])
                                .range([h, 0]);

                            var ycum = d3.scaleLinear().domain([0, 100]).range([h, 0]);

                            var xAxis = d3.axisBottom()
                                .scale(xScale);


                            var yAxis = d3.axisLeft()
                                .scale(yhist)


                            var yAxis2 = d3.axisRight()
                                .scale(ycum);
                            d3.selectAll("#monthwise_chart > *").remove();



                            var color = d3.scaleOrdinal(d3.schemeCategory10);

                            //Draw histogram
                            var bar_pareto = svg_pareto.selectAll(".bar")
                                .data(sample_pareto)
                                .enter().append("g")
                                .attr("class", "bar")




                            bar_pareto.append("rect")
                                .attr("x", function (d) { return xScale(d.RejectionDescription) + 80; })
                                .attr("width", "50")
                                .attr("y", function (d) { return yhist(d.Frequency); })
                                .attr("height", function (d) { return h - yhist(d.Frequency); })
                                .style("fill", function (d) {
                                    console.log(color(d.Frequency))
                                    return color(d.Frequency)
                                })
                                .attr("fill", color)
                                .attr("text", function (d) { return `${d.Frequency}` })



                            ////Draw CDF line
                            var guide = d3.line()
                                .x(function (d) { return xScale(d.RejectionDescription) + (xScale.bandwidth() / 2); })
                                .y(function (d) { return ycum(d.Percentage) });


                            var line = svg_pareto.append('path')
                                .datum(sample_pareto)
                                .attr('d', guide)
                                .attr('class', 'line');
                            svg_pareto.selectAll(".line")
                                .data(sample_pareto)
                                .enter().append("circle")
                                .attr("r", 3.5)
                                .attr("cx", function (d) { return xScale(d.RejectionDescription) + (xScale.bandwidth() / 2); })
                                .attr("cy", function (d) { return ycum(d.Percentage) });

                            //Draw axes
                            svg_pareto.append("g")
                                .attr("class", "x axis")
                                .attr("transform", "translate(0," + h + ")")
                                .call(xAxis);

                            svg_pareto.append("g")
                                .attr("class", "y axis")
                                .call(yAxis)
                                .append("text")
                                .attr("transform", "rotate(-90)")
                                .attr("y", -50)
                                .attr("dy", ".71em")
                                .style("text-anchor", "end")

                                .text("Frequency");

                            svg_pareto.append("g")
                                .attr("class", "y axis")
                                .attr("transform", "translate(" + [w, 0] + ")")
                                .call(yAxis2)
                                .append("text")
                                .attr("transform", "rotate(-90)")
                                .attr("y", 50)
                                .attr("dy", "-.71em")
                                .style("text-anchor", "end")
                                .text("Percentage %");


                            //svg_pareto.append("text")
                            //    .attr("class", "y label")
                            //    //.attr("text-anchor", "end")
                            //    .attr("y", -50)
                            //    .attr("dy", ".75em")
                            //    .attr('text-anchor', 'end')

                            //    .attr("transform", "rotate(-90)")
                            //    .text("Frequency");

                            //svg_pareto.append("text")
                            //    .attr("class", "y label2")
                            //    //.attr("text-anchor", "end")
                            //    //.attr("y", -50)
                            //    .attr("dy", ".75em")
                            //    .attr('text-anchor', 'end')

                            //    .attr("transform", "translate(" + [w, 0] + ")")
                            //    .attr("transform", "rotate(-90)")
                            //    .attr("y", w + 50)
                            //    .text("Percentage");

                        }
                        else {
                            $("#monthwise_chart").empty();
                            var div_width = 400;
                            var div_height = 400;
                            var svg = d3.select("#monthwise_chart").append("svg")
                                .attr("width", div_width)
                                .attr("height", div_height)
                                .attr("preserveAspectRatio", "xMidYMid")
                                .append("g")
                                .attr("transform", "translate(" + (div_width / 2 - 50) + "," + (div_height / 2 - 50) + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
        }

        //Yearwise
        else if (TimeSlot == "5") {
            if (Report_type > 1) {
                if (Year == "") {
                    swal({
                        icon: "error",
                        title: "Please Select Year...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (TimeSlot == "0") {
                    swal({
                        icon: "error",
                        title: "Please Select TimeSlot...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
            }
            if (Report_name == "1") {
                var myData = {
                    "QueryType": "Monthwise_table",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Year,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetYearwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Yearwise_Quality_trend").show();
                        $("#Yearwise_Quality_trend_chart").hide();
                        $("#Yearwise_Quality_trend__per_chart").hide();

                        var rowsCnt = document.getElementById("datatable_monthwise").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_monthwise").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#monthwise_mis").show();
                                $("#machine_name_month").html(Machine);
                                $("#month_date_month").html(Year);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Year + "</td> ";
                                cols += "<td> " + response.data.Table[i].Name + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalOkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalNokParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalReworkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].Firstpassyeild + "</td> ";
                                cols += "<td> " + response.data.Table[i].Rework_Percentage + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".yearwise_details").append(newRow);
                                j++;
                            }
                        }

                        else {

                            $(".custom_pre_error").text(response.msg);

                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_monthwise', 'Yearly_Quality_trend');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "2") {
                var myData = {
                    "QueryType": "Monthwise_chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Year,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetYearwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Yearwise_Quality_trend").hide();
                        $("#Yearwise_Quality_trend_chart").show();
                        $("#yearwise_Quality_trend__per_chart").hide();
                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Yearwise_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409", "#F7DB26"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.Month; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.Month) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); });

                             g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                 .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Month");

                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Quantity");

                            //var legend = g.append("g")
                            //    .attr("font-family", "sans-serif")
                            //    .attr("font-size", 10)
                            //    .attr("text-anchor", "end")
                            //    .selectAll("g")
                            //    .data(keys.slice().reverse())
                            //    .enter().append("g")
                            //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                            //legend.append("rect")
                            //    .attr("x", width - 19)
                            //    .attr("width", 19)
                            //    .attr("height", 19)
                            //    .attr("fill", z);

                            //legend.append("text")
                            //    .attr("x", width - 24)
                            //    .attr("y", 9.5)
                            //    .attr("dy", "0.32em")
                            //    .text(function (d) { return d; });
                        }
                        else {
                            var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Yearwise_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");


                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "3") {
                var myData = {
                    "QueryType": "Monthwise_%chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Year,
                    "Machine": Machine
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetYearwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        d3.select("svg").remove();

                        $("#Yearwise_Quality_trend").hide();
                        $("#Yearwise_Quality_trend_chart").hide();
                        $("#Yearwise_Quality_trend__per_chart").show();
                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Yearwise_trend_percentage").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.Month; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.Month) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); });

                             g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Month");

                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Quantity");

                            //var legend = g.append("g")
                            //    .attr("font-family", "sans-serif")
                            //    .attr("font-size", 10)
                            //    .attr("text-anchor", "end")
                            //    .selectAll("g")
                            //    .data(keys.slice().reverse())
                            //    .enter().append("g")
                            //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                            //legend.append("rect")
                            //    .attr("x", width - 19)
                            //    .attr("width", 19)
                            //    .attr("height", 19)
                            //    .attr("fill", z);

                            //legend.append("text")
                            //    .attr("x", width - 24)
                            //    .attr("y", 9.5)
                            //    .attr("dy", "0.32em")
                            //    .text(function (d) { return d; });
                        }
                        else {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                            width = 960 - margin.left - margin.right,
                            height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Yearwise_trend_percentage").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");
                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");

 }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "4") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Year,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_yearwise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Yearly_Specific_trend").show();

                        var rowsCnt = document.getElementById("datatable_specific_month").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_specific_month").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#monthwise_reason").show();
                                $("#machine_name_monthreason").html(Machine);
                                $("#month_date_monthreason").html(Year);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Year + "</td> ";
                                cols += "<td> " + response.data.Table[i].Name + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance_per + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".Specific_month_details").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_specific_month', 'Yearly_Specific_reason');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

             else if (Report_name == "5") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "linecode": '@Session["LineCode"]',
                    "Date": Year,
                    "Machine": Machine,
                    "Reason": Reason,
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_yearwise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();

                        $("#Year_Specific_trend_chart").show();

                        // If data is not available
                        if (typeof response.data.Table === "undefined") {

                            // Output error
                            $(".Year_chart_specific").text("No Data Available.");

                            // Otherwise
                        } else {

                            var data = response.data.Table;
                            // Set SVGs dimensions and margins
                            var margin = { top: 20, right: 20, bottom: 30, left: 50 },
                                width = 960 - margin.left - margin.right,
                                height = 300 - margin.top - margin.bottom;

                            // Setup ranges
                            var x = d3.scaleBand().range([0, width]),
                                y = d3.scaleLinear().range([height, 0]);


                            // Setup line
                            var valueline = d3.line()
                                .x(function (d) { return x(d.Month); })
                                .y(function (d) { return y(d.Occurance); });

                            // Setup tooltips
                            var div = d3.select(".Year_chart_specific").append("div")
                                .attr("class", "tooltip")
                                .style("opacity", 0);

                            // Append SVG to container DIV, append group to SVG
                            var svg = d3.select(".Year_chart_specific").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate( " + margin.left + ", " + margin.top + " )");

                            // Format the data
                            data.forEach(function (d) {
                                d.Month = d.Month;
                                d.Occurance = +d.Occurance;
                            });

                            x.domain(data.map(function (d) { return d.Month; }));

                            y.domain([0, d3.max(data, function (d) { return d.Occurense; })]);

                            // Append the line to the graph
                            svg.append("path")
                                .data([data])
                                .attr("class", "line")
                                .attr("d", valueline);

                            // Append tooltips to the graph
                            svg.selectAll("dot")
                                .data(data)
                                .enter().append("circle")
                                .attr("class", "node")
                                .attr("r", 5)
                                .attr("cx", function (d) { return x(d.Month); })
                                .attr("cy", function (d) { return y(d.Occurense); })
                                .on("mouseover", function (d) {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 1);
                                    div.html(d.Month + "<br/>" + d.Occurense)
                                })
                                .on("mousemove", function () {
                                    return div
                                        .style("top", (d3.event.pageY + 16) + "px")
                                        .style("left", (d3.event.pageX + 16) + "px");
                                })
                                .on("mouseout", function () {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 0);
                                });

                            // Append X Axis to the graph
                            svg.append("g")
                                .attr("transform", "translate( 0," + height + " )")
                                .call(d3.axisBottom(x))
                                .append("text")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "middle")
                                .attr('x', 450)
                                .attr('y', 40)
                                .text("Month");

                            // Append Y Axis to the graph
                            svg.append("g")
                                .call(d3.axisLeft(y))
                                .append("text")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("occurrence");
                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "8") {
                var myData = {
                    "line": '@Session["LineCode"]',
                    "machine": Machine,
                    "Year": Year,
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                };

                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetRejection_Pareto_YearwiseReport',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Yearwise_rejection").show();

                        var rowsCnt = document.getElementById("datatable_yearwise").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_yearwise").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#monthpareto_mis").show();
                                $("#machine_name_paretomonth").html(Machine);

                                $("#month_date_paretomonth").html(Year);
                            }
                            var Frequency_tot = 0;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                Frequency_tot += response.data.Table[i].Frequency;
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                cols += "<td> " + response.data.Table[i].RejectionDescription + "</td> ";
                                cols += "<td> " + response.data.Table[i].Frequency + "</td> ";
                                cols += "<td> " + ((response.data.Table[i].Frequency * 100) / Frequency_tot).toFixed() + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".yearwise_rejection").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }
                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_yearwise', 'Yearly_Top10 Rejection_trend');
                            }
                            else {
                                $(".custom_pre_error").text(response.msg);
                            }

                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "9") {
                var myData = {
                    "line": '@Session["LineCode"]',
                    "machine": Machine,
                    "Year": Year,
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                };

                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetRejection_Pareto_YearwiseReport',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        $("#Yearly_chart").show();

                        d3.select("#yearwise_chart svg").remove();

                        if (response.status != "Error") {

                            const a = $('#yearwise_chart').height();
                            const b = $('#yearwise_chart').width();


                            sample_pareto = response.data.Table;
                            var m = { top: 25, right: 50, bottom: 150, left: 50 }
                                , h = a - m.top - m.bottom - 25
                                , w = b - m.left - m.right
                                , barWidth = 5;

                            var dataset = null;
                            //typecast Amount to #, calculate total, and cumulative amounts


                            //Axes and scales
                            var xScale = d3.scaleBand().rangeRound([0, w], 0.1);
                            xScale.domain(sample_pareto.map(function (d) { return d.RejectionDescription; }));

                            var yhist = d3.scaleLinear()
                                .domain([0, d3.max(sample_pareto, function (d) { return d.Frequency; })])
                                .range([h, 0]);

                            var ycum = d3.scaleLinear().domain([0, 100]).range([h, 0]);

                            var xAxis = d3.axisBottom()
                                .scale(xScale);


                            var yAxis = d3.axisLeft()
                                .scale(yhist)


                            var yAxis2 = d3.axisRight()
                                .scale(ycum);
                            d3.selectAll("#yearwise_chart > *").remove();

                            ////Draw svg
                            var svg_pareto = d3.select("#yearwise_chart").append("svg")
                                .attr("width", w + m.left + m.right)
                                .attr("height", h + m.top + m.bottom)
                                .append("g")
                                .attr("transform", "translate(" + m.left + "," + m.top + ")");




                            var color = d3.scaleOrdinal(d3.schemeCategory10);

                            //Draw histogram
                            var bar_pareto = svg_pareto.selectAll(".bar")
                                .data(sample_pareto)
                                .enter().append("g")
                                .attr("class", "bar")




                            bar_pareto.append("rect")
                                .attr("x", function (d) { return xScale(d.RejectionDescription) + 80; })
                                .attr("width", 50)
                                .attr("y", function (d) { return yhist(d.Frequency); })
                                .attr("height", function (d) { return h - yhist(d.Frequency); })
                                .style("fill", function (d) {
                                    console.log(color(d.Frequency))
                                    return color(d.Frequency)
                                })
                                .attr("fill", color)
                                .attr("text", function (d) { return `${d.Frequency}` })



                            ////Draw CDF line
                            var guide = d3.line()
                                .x(function (d) { return xScale(d.RejectionDescription) + (xScale.bandwidth() / 2); })
                                .y(function (d) { return ycum(d.Percentage) });


                            var line = svg_pareto.append('path')
                                .datum(sample_pareto)
                                .attr('d', guide)
                                .attr('class', 'line');
                            svg_pareto.selectAll(".line")
                                .data(sample_pareto)
                                .enter().append("circle")
                                .attr("r", 3.5)
                                .attr("cx", function (d) { return xScale(d.RejectionDescription) + (xScale.bandwidth() / 2); })
                                .attr("cy", function (d) { return ycum(d.Percentage) });

                            //Draw axes
                            svg_pareto.append("g")
                                .attr("class", "x axis")
                                .attr("transform", "translate(0," + h + ")")
                                .call(xAxis);

                            svg_pareto.append("g")
                                .attr("class", "y axis")
                                .call(yAxis)
                                .append("text")
                                .attr("transform", "rotate(-90)")
                                .attr("y", -50)
                                .attr("dy", ".71em")
                                .style("text-anchor", "end")

                                .text("Frequency");

                            svg_pareto.append("g")
                                .attr("class", "y axis")
                                .attr("transform", "translate(" + [w, 0] + ")")
                                .call(yAxis2)
                                .append("text")
                                .attr("transform", "rotate(-90)")
                                .attr("y", 50)
                                .attr("dy", "-.71em")
                                .style("text-anchor", "end")
                                .text("Percentage %");


                            //svg_pareto.append("text")
                            //    .attr("class", "y label")
                            //    //.attr("text-anchor", "end")
                            //    .attr("y", -50)
                            //    .attr("dy", ".75em")
                            //    .attr('text-anchor', 'end')

                            //    .attr("transform", "rotate(-90)")
                            //    .text("Frequency");

                            //svg_pareto.append("text")
                            //    .attr("class", "y label2")
                            //    //.attr("text-anchor", "end")
                            //    //.attr("y", -50)
                            //    .attr("dy", ".75em")
                            //    .attr('text-anchor', 'end')

                            //    .attr("transform", "translate(" + [w, 0] + ")")
                            //    .attr("transform", "rotate(-90)")
                            //    .attr("y", w + 50)
                            //    .text("Percentage");

                        }
                        else {
                            $("#yearwise_chart").empty();
                            var div_width = 400;
                            var div_height = 400;
                            var svg = d3.select("#yearwise_chart").append("svg")
                                .attr("width", div_width)
                                .attr("height", div_height)
                                .attr("preserveAspectRatio", "xMidYMid")
                                .append("g")
                                .attr("transform", "translate(" + (div_width / 2 - 50) + "," + (div_height / 2 - 50) + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
        }

        //Custom
        else if (TimeSlot == "6") {
            if (Report_type > 1) {
                if (TimeSlot == "0") {
                    swal({
                        icon: "error",
                        title: "Please Select TimeSlot...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (FDate == "") {
                    swal({
                        icon: "error",
                        title: "Please Select From Date...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (TDate == "") {
                    swal({
                        icon: "error",
                        title: "Please Select To Date...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
            }
            if (Report_name == "1") {
                var myData = {
                    "QueryType": "Daywise_table",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "FDate": FDate,
                    "TDate": TDate,
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetCustom_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Custom_Quality_trend").show();
                        $("#Custom_Quality_trend_chart").hide();
                        $("#Custom_Quality_trend__per_chart").hide();

                        var rowsCnt = document.getElementById("datatable_custom").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_custom").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#customwise_mis").show();
                                $("#machine_name_custom").html(Machine);
                                $("#customfrom_date_custom").html(FDate);
                                $("#customto_date_custom").html(TDate);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Year + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalOkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalNokParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalReworkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].Firstpassyeild + "</td> ";
                                cols += "<td> " + response.data.Table[i].Rework_Percentage + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".custom_details").append(newRow);
                                j++;
                            }
                        }

                        else {

                            $(".custom_pre_error").text(response.msg);

                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_custom', 'Yearly_Quality_trend');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "2") {
                var myData = {
                    "QueryType": "Daywise_chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "FDate": FDate,
                    "TDate": TDate,
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetCustom_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Custom_Quality_trend").hide();
                        $("#Custom_Quality_trend_chart").show();
                        $("#Custom_Quality_trend__per_chart").hide();

                        var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                            width = 960 - margin.left - margin.right,
                            height = 800 - margin.top - margin.bottom;

                        var svg = d3.select(".Custom_trend").append("svg")
                            .attr("width", width + margin.left + margin.right)
                            .attr("height", height + margin.top + margin.bottom)
                            .append("g")
                            .attr("transform",
                                "translate(" + margin.left + "," + margin.top + ")");

                        var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                        var x0 = d3.scaleBand()
                            .rangeRound([0, width])
                            .paddingInner(0.1);

                        var x1 = d3.scaleBand()
                            .padding(0.05);

                        var y = d3.scaleLinear()
                            .rangeRound([height, 0]);

                        var z = d3.scaleOrdinal()
                            .range(["#0993F3", "#F31409", "#F7DB26"]);

                        var vals = response.data.Table;

                        data = vals;

                        var keys = Object.keys(data[0]).slice(1);

                        x0.domain(data.map(function (d) { return d.Year; }));
                        x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                        y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                        g.append("g")
                            .selectAll("g")
                            .data(data)
                            .enter().append("g")
                            .attr("transform", function (d) { return "translate(" + x0(d.Year) + ",0)"; })
                            .selectAll("rect")
                            .data(function (d) {
                                debugger;
                                return keys.map(function (key) {
                                    return { key: key, value: d[key] };
                                });
                            })
                            .enter().append("rect")
                            .attr("x", function (d) { return x1(d.key); })
                            .attr("y", function (d) { return y(d.value); })
                            .attr("width", x1.bandwidth())
                            .attr("height", function (d) { return height - y(d.value); })
                            .attr("fill", function (d) { return z(d.key); });

                        g.append("g")
                            .attr("class", "axis")
                            .attr("transform", "translate(0," + height + ")")
                            .call(d3.axisBottom(x0))
                            .append("text")
                            .attr("x", "400")
                            .attr("y", "70")
                            .attr("dy", "0.32em")
                            .attr("fill", "#000")
                            .attr("font-weight", "bold")
                            .attr("text-anchor", "start")
                            .text("Year");

                        g.append("g")
                            .attr("class", "axis")
                            .call(d3.axisLeft(y).ticks(null, "s"))
                            .append("text")
                            .attr("x", 2)
                            .attr("y", y(y.ticks().pop()) + 0.5)
                            .attr("dy", "0.32em")
                            .attr("fill", "#000")
                            .attr("font-weight", "bold")
                            .attr("text-anchor", "start")
                            .text("Quantity");

                        //var legend = g.append("g")
                        //    .attr("font-family", "sans-serif")
                        //    .attr("font-size", 10)
                        //    .attr("text-anchor", "end")
                        //    .selectAll("g")
                        //    .data(keys.slice().reverse())
                        //    .enter().append("g")
                        //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                        //legend.append("rect")
                        //    .attr("x", width - 19)
                        //    .attr("width", 19)
                        //    .attr("height", 19)
                        //    .attr("fill", z);

                        //legend.append("text")
                        //    .attr("x", width - 24)
                        //    .attr("y", 9.5)
                        //    .attr("dy", "0.32em")
                        //    .text(function (d) { return d; });

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "3") {
                var myData = {
                    "QueryType": "Daywise_%chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "FDate": FDate,
                    "TDate": TDate,
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetCustom_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();
                        $("#Custom_Quality_trend").hide();
                        $("#Custom_Quality_trend_chart").hide();
                        $("#Custom_Quality_trend__per_chart").show();

                        var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                            width = 960 - margin.left - margin.right,
                            height = 800 - margin.top - margin.bottom;

                        var svg = d3.select(".Custom_trend_percentage").append("svg")
                            .attr("width", width + margin.left + margin.right)
                            .attr("height", height + margin.top + margin.bottom)
                            .append("g")
                            .attr("transform",
                                "translate(" + margin.left + "," + margin.top + ")");

                        var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                        var x0 = d3.scaleBand()
                            .rangeRound([0, width])
                            .paddingInner(0.1);

                        var x1 = d3.scaleBand()
                            .padding(0.05);

                        var y = d3.scaleLinear()
                            .rangeRound([height, 0]);

                        var z = d3.scaleOrdinal()
                            .range(["#0993F3", "#F31409"]);

                        var vals = response.data.Table;

                        data = vals;

                        var keys = Object.keys(data[0]).slice(1);

                        x0.domain(data.map(function (d) { return d.Year; }));
                        x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                        y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                        g.append("g")
                            .selectAll("g")
                            .data(data)
                            .enter().append("g")
                            .attr("transform", function (d) { return "translate(" + x0(d.Year) + ",0)"; })
                            .selectAll("rect")
                            .data(function (d) {
                                debugger;
                                return keys.map(function (key) {
                                    return { key: key, value: d[key] };
                                });
                            })
                            .enter().append("rect")
                            .attr("x", function (d) { return x1(d.key); })
                            .attr("y", function (d) { return y(d.value); })
                            .attr("width", x1.bandwidth())
                            .attr("height", function (d) { return height - y(d.value); })
                            .attr("fill", function (d) { return z(d.key); });

                        g.append("g")
                            .attr("class", "axis")
                            .attr("transform", "translate(0," + height + ")")
                            .call(d3.axisBottom(x0))
                            .append("text")
                            .attr("x", "400")
                            .attr("y", "70")
                            .attr("dy", "0.32em")
                            .attr("fill", "#000")
                            .attr("font-weight", "bold")
                            .attr("text-anchor", "start")
                            .text("Year");

                        g.append("g")
                            .attr("class", "axis")
                            .call(d3.axisLeft(y).ticks(null, "s"))
                            .append("text")
                            .attr("x", 2)
                            .attr("y", y(y.ticks().pop()) + 0.5)
                            .attr("dy", "0.32em")
                            .attr("fill", "#000")
                            .attr("font-weight", "bold")
                            .attr("text-anchor", "start")
                            .text("Quantity");

                        //var legend = g.append("g")
                        //    .attr("font-family", "sans-serif")
                        //    .attr("font-size", 10)
                        //    .attr("text-anchor", "end")
                        //    .selectAll("g")
                        //    .data(keys.slice().reverse())
                        //    .enter().append("g")
                        //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                        //legend.append("rect")
                        //    .attr("x", width - 19)
                        //    .attr("width", 19)
                        //    .attr("height", 19)
                        //    .attr("fill", z);

                        //legend.append("text")
                        //    .attr("x", width - 24)
                        //    .attr("y", 9.5)
                        //    .attr("dy", "0.32em")
                        //    .text(function (d) { return d; });
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "4") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "FDate": FDate,
                    "TDate": TDate,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_customwise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response)
                    {
                        $("#Custom_Specific_trend").show();

                        var rowsCnt = document.getElementById("datatable_specific_custom").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_specific_custom").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#customwise_reason").show();
                                $("#machine_name_customreason").html(Machine);
                                $("#customfrom_date_customreason").html(FDate);
                                $("#customto_date_customreason").html(TDate);
                            }

                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Year + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance_per + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".Specific_custom_details").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }
                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_specific_custom', 'Yearly_Specific_reason');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "5") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "FDate": FDate,
                    "TDate": TDate,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_customwise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();

                        $("#Custom_Specific_trend_chart").show();

                        // If data is not available
                        if (typeof response.data.Table === "undefined") {

                            // Output error
                            $(".Custom_chart_specific").text("No Data Available.");

                            // Otherwise
                        } else {

                            var data = response.data.Table;

                            const a = $('.Custom_chart_specific').height();
                            const b = $('.Custom_chart_specific').width();

                            var margin = { top: 25, right: 50, bottom: 150, left: 50 }
                                , height = a - margin.top - margin.bottom
                                , width = b - margin.left - margin.right
                                , barWidth = 5;


                            // Set SVGs dimensions and margins
                            //var margin = { top: 20, right: 20, bottom: 30, left: 50 },
                            //    width = 960 - margin.left - margin.right,
                            //    height = 300 - margin.top - margin.bottom;

                            // Setup ranges
                            var x = d3.scaleBand().range([0, width]),
                                y = d3.scaleLinear().range([height, 0]);


                            // Setup line
                            var valueline = d3.line()
                                .x(function (d) { return x(d.Year); })
                                .y(function (d) { return y(d.Occurance); });

                            // Setup tooltips
                            var div = d3.select(".Custom_chart_specific").append("div")
                                .attr("class", "tooltip")
                                .style("opacity", 0);

                            // Append SVG to container DIV, append group to SVG
                            var svg = d3.select(".Custom_chart_specific").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate( " + margin.left + ", " + margin.top + " )");

                            // Format the data
                            data.forEach(function (d) {
                                d.Year = d.Year;
                                d.Occurance = +d.Occurance;
                            });

                            x.domain(data.map(function (d) { return d.Year; }));

                            y.domain([0, d3.max(data, function (d) { return d.Occurance; })]);

                            // Append the line to the graph
                            svg.append("path")
                                .data([data])
                                .attr("class", "line")
                                .attr("d", valueline);

                            // Append tooltips to the graph
                            svg.selectAll("dot")
                                .data(data)
                                .enter().append("circle")
                                .attr("class", "node")
                                .attr("r", 5)
                                .attr("cx", function (d) { return x(d.Year); })
                                .attr("cy", function (d) { return y(d.Occurance); })
                                .on("mouseover", function (d) {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 1);
                                    div.html(d.Year + "<br/>" + d.Occurance)
                                })
                                .on("mousemove", function () {
                                    return div
                                        .style("top", (d3.event.pageY + 16) + "px")
                                        .style("left", (d3.event.pageX + 16) + "px");
                                })
                                .on("mouseout", function () {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 0);
                                });

                            // Append X Axis to the graph
                            svg.append("g")
                                .attr("transform", "translate( 0," + height + " )")
                                .call(d3.axisBottom(x))
                                .append("text")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "middle")
                                .attr('x', 450)
                                .attr('y', 40)
                                .text("Year");

                            // Append Y Axis to the graph
                            svg.append("g")
                                .call(d3.axisLeft(y))
                                .append("text")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("occurrence");
                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "8") {
                var myData = {
                    "line": '@Session["LineCode"]',
                    "machine": Machine,
                    "FromDate": FDate,
                    "ToDate": TDate,
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                };

                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetRejection_Pareto_CustomReport',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Customwise_rejection").show();

                        var rowsCnt = document.getElementById("datatable_customwise").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_customwise").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {

                            if (Report_type == "3") {

                                $("#custompareto_mis").show();
                                $("#machine_name_paretocustom").html(Machine);

                                $("#customfrom_date_paretocustom").html(FDate);
                                $("#customto_date_paretocustom").html(TDate);
                            }

                            var Frequency_tot = 0;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                Frequency_tot += response.data.Table[i].Frequency;
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                cols += "<td> " + response.data.Table[i].RejectionDescription + "</td> ";
                                cols += "<td> " + response.data.Table[i].Frequency + "</td> ";
                                cols += "<td> " + ((response.data.Table[i].Frequency * 100) / Frequency_tot).toFixed() + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".customwise_rejection").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }
                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_customwise', 'Custom_Top10 Rejection_trend');
                            }
                            else {
                                $(".custom_pre_error").text(response.msg);
                            }

                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "9") {
                var myData = {
                    "line": '@Session["LineCode"]',
                    "machine": Machine,
                    "FromDate": FDate,
                    "ToDate": TDate,
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                };

                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetRejection_Pareto_CustomReport',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        $("#Custom_chart").show();

                        d3.select("#customwise_chart svg").remove();

                        if (response.status != "Error") {

                            const a = $('#customwise_chart').height();
                            const b = $('#customwise_chart').width();


                            sample_pareto = response.data.Table;
                            var m = { top: 25, right: 50, bottom: 150, left: 50 }
                                , h = a - m.top - m.bottom - 25
                                , w = b - m.left - m.right
                                , barWidth = 5;

                            var dataset = null;
                            //typecast Amount to #, calculate total, and cumulative amounts


                            //Axes and scales
                            var xScale = d3.scaleBand().rangeRound([0, w], 0.1);

                            xScale.domain(sample_pareto.map(function (d) { return d.RejectionDescription; }));

                            var yhist = d3.scaleLinear()
                                .domain([0, d3.max(sample_pareto, function (d) { return d.Frequency; })])
                                .range([h, 0]);

                            var ycum = d3.scaleLinear().domain([0, 100]).range([h, 0]);

                            var xAxis = d3.axisBottom()
                                .scale(xScale);


                            var yAxis = d3.axisLeft()
                                .scale(yhist)


                            var yAxis2 = d3.axisRight()
                                .scale(ycum);
                            d3.selectAll("#customwise_chart > *").remove();

                            ////Draw svg
                            var svg_pareto = d3.select("#customwise_chart").append("svg")
                                .attr("width", w + m.left + m.right)
                                .attr("height", h + m.top + m.bottom)
                                .append("g")
                                .attr("transform", "translate(" + m.left + "," + m.top + ")");




                            var color = d3.scaleOrdinal(d3.schemeCategory10);

                            //Draw histogram
                            var bar_pareto = svg_pareto.selectAll(".bar")
                                .data(sample_pareto)
                                .enter().append("g")
                                .attr("class", "bar")




                            bar_pareto.append("rect")
                                .attr("x", function (d) { return xScale(d.RejectionDescription) + 80; })
                                .attr("width", "50")
                                .attr("y", function (d) { return yhist(d.Frequency); })
                                .attr("height", function (d) { return h - yhist(d.Frequency); })
                                .style("fill", function (d) {
                                    return color(d.Frequency)
                                })
                                .attr("fill", color)
                                .attr("text", function (d) { return `${d.Frequency}` })



                            ////Draw CDF line
                            var guide = d3.line()
                                .x(function (d) { return xScale(d.RejectionDescription) + (xScale.bandwidth() / 2); })
                                .y(function (d) { return ycum(d.Percentage) });


                            var line = svg_pareto.append('path')
                                .datum(sample_pareto)
                                .attr('d', guide)
                                .attr('class', 'line');
                            svg_pareto.selectAll(".line")
                                .data(sample_pareto)
                                .enter().append("circle")
                                .attr("r", 3.5)
                                .attr("cx", function (d) { return xScale(d.RejectionDescription) + (xScale.bandwidth() / 2); })
                                .attr("cy", function (d) { return ycum(d.Percentage) });

                            //Draw axes
                            svg_pareto.append("g")
                                .attr("class", "x axis")
                                .attr("transform", "translate(0," + h + ")")
                                .call(xAxis);


                            svg_pareto.append("g")
                                .attr("class", "y axis")
                                .call(yAxis)
                                .append("text")
                                .attr("transform", "rotate(-90)")
                                .attr("y", -50)
                                .attr("dy", ".71em")
                                .style("text-anchor", "end")
                                .text("Frequency");



                            svg_pareto.append("g")
                                .attr("class", "y axis")
                                .attr("transform", "translate(" + [w, 0] + ")")
                                .call(yAxis2)
                                .append("text")
                                .attr("transform", "rotate(-90)")
                                .attr("y", 50)
                                .attr("dy", "-.71em")
                                .style("text-anchor", "end")
                                .text("Percentage %");


                            //svg_pareto.append("text")
                            //    .attr("class", "y label")
                            //    //.attr("text-anchor", "end")
                            //    .attr("y", -50)
                            //    .attr("dy", ".75em")
                            //    .attr('text-anchor', 'end')

                            //    .attr("transform", "rotate(-90)")
                            //    .text("Frequency");

                            //svg_pareto.append("text")
                            //    .attr("class", "y label2")
                            //    //.attr("text-anchor", "end")
                            //    //.attr("y", -50)
                            //    .attr("dy", ".75em")
                            //    .attr('text-anchor', 'end')

                            //    .attr("transform", "translate(" + [w, 0] + ")")
                            //    .attr("transform", "rotate(-90)")
                            //    .attr("y", w + 50)
                            //    .text("Percentage");

                        }
                        else {
                            $("#customwise_chart").empty();
                            var div_width = 400;
                            var div_height = 400;
                            var svg = d3.select("#customwise_chart").append("svg")
                                .attr("width", div_width)
                                .attr("height", div_height)
                                .attr("preserveAspectRatio", "xMidYMid")
                                .append("g")
                                .attr("transform", "translate(" + (div_width / 2 - 50) + "," + (div_height / 2 - 50) + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
        }

        //Weekwise report
        else if (TimeSlot == "3") {
            if (Report_type > 1) {
                if (Date == "") {
                    swal({
                        icon: "error",
                        title: "Please Select Date...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
                if (TimeSlot == "0") {
                    swal({
                        icon: "error",
                        title: "Please Select TimeSlot...!",
                        button: true,
                        timer: 4500
                    })
                    return;
                }
            }
            if (Report_name == "1") {
                var myData = {
                    "QueryType": "Daywise_table",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetWeekwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Weekly_Quality_trend").show();
                        $("#Weekly_Quality_trend_chart").hide();
                        $("#Weekly_Quality_trend__per_chart").hide();

                        var rowsCnt = document.getElementById("datatable_week").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_week").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#daywise1_mis").show();
                                $("#machine_name_day1").html(Machine);
                                $("#day_date_day1").html(Date);

                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Date + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalOkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalNokParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].TotalReworkParts + "</td> ";
                                cols += "<td> " + response.data.Table[i].Firstpassyeild + "</td> ";
                                cols += "<td> " + response.data.Table[i].Rework_Percentage + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".week_details").append(newRow);
                                j++;
                            }
                        }

                        else {
                            $(".custom_pre_error").text(response.msg);
                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_week', 'Weekly_Quality_trend');
                            }
                            else {
                                $(".custom_pre_error").text(response.msg);
                            }

                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "2") {
                var myData = {
                    "QueryType": "Daywise_chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetWeekwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response)
                    {
                        d3.select("svg").remove();

                        $("#Weekly_Quality_trend").hide();
                        $("#Weekly_Quality_trend_chart").show();
                        $("#Weekly_Quality_trend__per_chart").hide();
                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Week_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409", "#F7DB26"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.Date; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.Date) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); });

                            g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Date");

                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Quantity");

                            //var legend = g.append("g")
                            //    .attr("font-family", "sans-serif")
                            //    .attr("font-size", 10)
                            //    .attr("text-anchor", "end")
                            //    .selectAll("g")
                            //    .data(keys.slice().reverse())
                            //    .enter().append("g")
                            //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                            //legend.append("rect")
                            //    .attr("x", width - 19)
                            //    .attr("width", 19)
                            //    .attr("height", 19)
                            //    .attr("fill", z);

                            //legend.append("text")
                            //    .attr("x", width - 24)
                            //    .attr("y", 9.5)
                            //    .attr("dy", "0.32em")
                            //    .text(function (d) { return d; });
                        }

                        else {
                            var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Week_trend").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");


                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "3") {
                var myData = {
                    "QueryType": "Daywise_%chart",
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetWeekwise_Quality',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        d3.select("svg").remove();

                        $("#Weekly_Quality_trend").hide();
                        $("#Weekly_Quality_trend_chart").hide();
                        $("#Weekly_Quality_trend__per_chart").show();
                        if (response.status != "Error") {
                            var margin = { top: 20, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Week_trend_percentage").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");

                            var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

                            var x0 = d3.scaleBand()
                                .rangeRound([0, width])
                                .paddingInner(0.1);

                            var x1 = d3.scaleBand()
                                .padding(0.05);

                            var y = d3.scaleLinear()
                                .rangeRound([height, 0]);

                            var z = d3.scaleOrdinal()
                                .range(["#0993F3", "#F31409"]);

                            var vals = response.data.Table;

                            data = vals;

                            var keys = Object.keys(data[0]).slice(1);

                            x0.domain(data.map(function (d) { return d.Date; }));
                            x1.domain(keys).rangeRound([0, x0.bandwidth()]);
                            y.domain([0, d3.max(data, function (d) { return d3.max(keys, function (key) { return d[key]; }); })]).nice();

                            g.append("g")
                                .selectAll("g")
                                .data(data)
                                .enter().append("g")
                                .attr("transform", function (d) { return "translate(" + x0(d.Date) + ",0)"; })
                                .selectAll("rect")
                                .data(function (d) {
                                    debugger;
                                    return keys.map(function (key) {
                                        return { key: key, value: d[key] };
                                    });
                                })
                                .enter().append("rect")
                                .attr("x", function (d) { return x1(d.key); })
                                .attr("y", function (d) { return y(d.value); })
                                .attr("width", x1.bandwidth())
                                .attr("height", function (d) { return height - y(d.value); })
                                .attr("fill", function (d) { return z(d.key); });

                            g.append("g")
                                .attr("class", "axis")
                                .attr("transform", "translate(0," + height + ")")
                                .call(d3.axisBottom(x0))
                                .append("text")
                                .attr("x", "400")
                                .attr("y", "70")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Date");

                            g.append("g")
                                .attr("class", "axis")
                                .call(d3.axisLeft(y).ticks(null, "s"))
                                .append("text")
                                .attr("x", 2)
                                .attr("y", y(y.ticks().pop()) + 0.5)
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("Quantity");

                            //var legend = g.append("g")
                            //    .attr("font-family", "sans-serif")
                            //    .attr("font-size", 10)
                            //    .attr("text-anchor", "end")
                            //    .selectAll("g")
                            //    .data(keys.slice().reverse())
                            //    .enter().append("g")
                            //    .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; });

                            //legend.append("rect")
                            //    .attr("x", width - 19)
                            //    .attr("width", 19)
                            //    .attr("height", 19)
                            //    .attr("fill", z);

                            //legend.append("text")
                            //    .attr("x", width - 24)
                            //    .attr("y", 9.5)
                            //    .attr("dy", "0.32em")
                            //    .text(function (d) { return d; });
                        }
                        else {
                            var margin = { top: 60, right: 50, bottom: 30, left: 40 },
                                width = 960 - margin.left - margin.right,
                                height = 800 - margin.top - margin.bottom;

                            var svg = d3.select(".Week_trend_percentage").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate(" + margin.left + "," + margin.top + ")");
                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");


                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "4") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_weekwise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response)
                    {
                        $("#Week_Specific_trend").show();

                        var rowsCnt = document.getElementById("datatable_specific_daywise").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_specific_daywise").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#weekwise1_reason").show();
                                $("#machine_name_weekreason1").html(Machine);
                                $("#week_date_weekreason1").html(Date);
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                //cols += "<td> " + j + "</td> ";
                                cols += "<td> " + response.data.Table[i].Date + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance + "</td> ";
                                cols += "<td> " + response.data.Table[i].Occurance_per + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".Specific_daywise_details").append(newRow);
                                j++;
                            }
                        }
                        else {

                            $(".custom_pre_error").text(response.msg);

                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_specific_daywise', 'Weekly_Specific_reason');
                            }
                            else {

                                $(".custom_pre_error").text(response.msg);

                            }
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }

            else if (Report_name == "5") {
                var myData = {
                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                    "line": '@Session["LineCode"]',
                    "Date": Date,
                    "Machine": Machine,
                    "Reason": Reason,
                    'subassembly': subassembly
                };
                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetSpecific_Reason_weekwise',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        d3.select("svg").remove();

                        $("#Week_Specific_trend_chart").show();

                        // If data is not available
                        if (typeof response.data.Table === "undefined") {

                            // Output error
                            $(".Week_chart_specific").text("No Data Available.");

                            // Otherwise
                        } else {

                            var data = response.data.Table;
                            // Set SVGs dimensions and margins
                            var margin = { top: 20, right: 20, bottom: 30, left: 50 },
                                width = 960 - margin.left - margin.right,
                                height = 300 - margin.top - margin.bottom;

                            // Setup ranges
                            var x = d3.scaleBand().range([0, width]),
                                y = d3.scaleLinear().range([height, 0]);


                            // Setup line
                            var valueline = d3.line()
                                .x(function (d) { return x(d.Date); })
                                .y(function (d) { return y(d.Occurance); });

                            // Setup tooltips
                            var div = d3.select(".Week_chart_specific").append("div")
                                .attr("class", "tooltip")
                                .style("opacity", 0);

                            // Append SVG to container DIV, append group to SVG
                            var svg = d3.select(".Week_chart_specific").append("svg")
                                .attr("width", width + margin.left + margin.right)
                                .attr("height", height + margin.top + margin.bottom)
                                .append("g")
                                .attr("transform",
                                    "translate( " + margin.left + ", " + margin.top + " )");

                            // Format the data
                            data.forEach(function (d) {
                                d.Date = d.Date;
                                d.Occurance = +d.Occurance;
                            });

                            x.domain(data.map(function (d) { return d.Date; }));

                            y.domain([0, d3.max(data, function (d) { return d.Occurance; })]);

                            // Append the line to the graph
                            svg.append("path")
                                .data([data])
                                .attr("class", "line")
                                .attr("d", valueline);

                            // Append tooltips to the graph
                            svg.selectAll("dot")
                                .data(data)
                                .enter().append("circle")
                                .attr("class", "node")
                                .attr("r", 5)
                                .attr("cx", function (d) { return x(d.Date); })
                                .attr("cy", function (d) { return y(d.Occurance); })
                                .on("mouseover", function (d) {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 1);
                                    div.html(d.Date + "<br/>" + d.Occurance)
                                })
                                .on("mousemove", function () {
                                    return div
                                        .style("top", (d3.event.pageY + 16) + "px")
                                        .style("left", (d3.event.pageX + 16) + "px");
                                })
                                .on("mouseout", function () {
                                    div.transition()
                                        .duration(200)
                                        .style("opacity", 0);
                                });

                            // Append X Axis to the graph
                            svg.append("g")
                                .attr("transform", "translate( 0," + height + " )")
                                .call(d3.axisBottom(x))
                                .append("text")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "middle")
                                .attr('x', 450)
                                .attr('y', 40)
                                .text("Date");

                            // Append Y Axis to the graph
                            svg.append("g")
                                .call(d3.axisLeft(y))
                                .append("text")
                                .attr("dy", "0.32em")
                                .attr("fill", "#000")
                                .attr("font-weight", "bold")
                                .attr("text-anchor", "start")
                                .text("occurrence");
                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }


            else if (Report_name == "8") {
                var myData = {
                    "line": '@Session["LineCode"]',
                    "machine": Machine,
                    "Date": Date,

                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                };

                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetRejection_Pareto_WeekwiseReport',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {

                        $("#Daywise_rejection").show();

                        var rowsCnt = document.getElementById("datatable_daywise").getElementsByTagName("tbody")[0].getElementsByTagName("tr").length;
                        if (rowsCnt > 0) {
                            for (var i = 0; i < rowsCnt; i++) {
                                document.getElementById("datatable_daywise").deleteRow(2);
                            }
                        }
                        if (response.status != "Error") {
                            if (Report_type == "3") {

                                $("#dailypareto_mis").show();
                                $("#machine_name_pareto").html(Machine);

                                $("#daily_date_pareto").html(ShiftDate);
                            }
                            var Frequency_tot = 0;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                Frequency_tot += response.data.Table[i].Frequency;
                            }
                            var j = 1;
                            for (var i = 0; i < response.data.Table.length; i++) {
                                var newRow = $("<tr>");
                                var cols = '';
                                cols += "<td> " + response.data.Table[i].RejectionDescription + "</td> ";
                                cols += "<td> " + response.data.Table[i].Frequency + "</td> ";
                                cols += "<td> " + ((response.data.Table[i].Frequency * 100) / Frequency_tot).toFixed() + "</td> ";
                                cols += "</tr>";
                                newRow.append(cols);
                                $(".daywise_rejection").append(newRow);
                                j++;
                            }
                        }
                        else {
                            $(".custom_pre_error").text(response.msg);
                        }

                        if (Report_type == "3") {
                            if (response.status != "Error") {
                                exportTableToExcel('datatable_daywise', 'Weekly_Top10 Rejection_trend');
                            }
                            else {
                                $(".custom_pre_error").text(response.msg);
                            }

                        }

                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
            else if (Report_name == "9") {
                var myData = {
                    "line": '@Session["LineCode"]',
                    "machine": Machine,
                    "Date": Date,

                    "CompanyCode": '@Session["CompanyCode"]',
                    "PlantCode": '@Session["PlantCode"]',
                };

                $.ajax({
                    type: "POST",
                    url: URL + 'api/Quality/GetRejection_Pareto_WeekwiseReport',
                    data: myData,
                    headers: {
                        Authorization: 'Bearer ' + user1
                    },
                    dataType: "json",
                    beforeSend: function () {
                        $('.loading').show();
                    },
                    complete: function () {
                        $('.loading').hide();
                    },
                    success: function (response) {
                        $("#Daywise_chart").show();
                        d3.select("#daywise_chart svg").remove();

                        if (response.status != "Error") {

                            const a = $('#daywise_chart').height();
                            const b = $('#daywise_chart').width();


                            sample_pareto = response.data.Table;
                            var m = { top: 25, right: 50, bottom: 150, left: 50 }
                                , h = a - m.top - m.bottom - 25
                                , w = b - m.left - m.right
                                , barWidth = 5;

                            var dataset = null;
                            //typecast Amount to #, calculate total, and cumulative amounts


                            //Axes and scales
                            var xScale = d3.scaleBand().rangeRound([0, w], 0.1);
                            xScale.domain(sample_pareto.map(function (d) { return d.RejectionDescription; }));

                            var yhist = d3.scaleLinear()
                                .domain([0, d3.max(sample_pareto, function (d) { return d.Frequency; })])
                                .range([h, 0]);

                            var ycum = d3.scaleLinear().domain([0, 100]).range([h, 0]);

                            var xAxis = d3.axisBottom()
                                .scale(xScale);


                            var yAxis = d3.axisLeft()
                                .scale(yhist)


                            var yAxis2 = d3.axisRight()
                                .scale(ycum);
                            d3.selectAll("#daywise_chart > *").remove();

                            ////Draw svg
                            var svg_pareto = d3.select("#daywise_chart").append("svg")
                                .attr("width", w + m.left + m.right)
                                .attr("height", h + m.top + m.bottom)
                                .append("g")
                                .attr("transform", "translate(" + m.left + "," + m.top + ")");




                            var color = d3.scaleOrdinal(d3.schemeCategory10);

                            //Draw histogram
                            var bar_pareto = svg_pareto.selectAll(".bar")
                                .data(sample_pareto)
                                .enter().append("g")
                                .attr("class", "bar")




                            bar_pareto.append("rect")
                                .attr("x", function (d) { return xScale(d.RejectionDescription); })
                                .attr("width", xScale.bandwidth() - 2)
                                .attr("y", function (d) { return yhist(d.Frequency); })
                                .attr("height", function (d) { return h - yhist(d.Frequency); })
                                .style("fill", function (d) {
                                    console.log(color(d.Frequency))
                                    return color(d.Frequency)
                                })
                                .attr("fill", color)
                                .attr("text", function (d) { return `${d.Frequency}` })



                            ////Draw CDF line
                            var guide = d3.line()
                                .x(function (d) { return xScale(d.RejectionDescription) + (xScale.bandwidth() / 2); })
                                .y(function (d) { return ycum(d.Percentage) });


                            var line = svg_pareto.append('path')
                                .datum(sample_pareto)
                                .attr('d', guide)
                                .attr('class', 'line');
                            svg_pareto.selectAll(".line")
                                .data(sample_pareto)
                                .enter().append("circle")
                                .attr("r", 3.5)
                                .attr("cx", function (d) { return xScale(d.RejectionDescription) + (xScale.bandwidth() / 2); })
                                .attr("cy", function (d) { return ycum(d.Percentage) });

                            //Draw axes
                            svg_pareto.append("g")
                                .attr("class", "x axis")
                                .attr("transform", "translate(0," + h + ")")
                                .call(xAxis);

                            svg_pareto.append("g")
                                .attr("class", "y axis")
                                .call(yAxis)
                                .append("text")
                                .attr("transform", "rotate(-90)")
                                .attr("y", -50)
                                .attr("dy", ".71em")
                                .style("text-anchor", "end")

                                .text("Frequency");

                            svg_pareto.append("g")
                                .attr("class", "y axis")
                                .attr("transform", "translate(" + [w, 0] + ")")
                                .call(yAxis2)
                                .append("text")
                                .attr("transform", "rotate(-90)")
                                .attr("y", 50)
                                .attr("dy", "-.71em")
                                .style("text-anchor", "end")
                                .text("Percentage %");


                            svg_pareto.append("text")
                                .attr("class", "y label")
                                //.attr("text-anchor", "end")
                                .attr("y", -50)
                                .attr("dy", ".75em")
                                .attr('text-anchor', 'end')

                                .attr("transform", "rotate(-90)")
                                .text("Frequency");

                            svg_pareto.append("text")
                                .attr("class", "y label2")
                                //.attr("text-anchor", "end")
                                //.attr("y", -50)
                                .attr("dy", ".75em")
                                .attr('text-anchor', 'end')

                                .attr("transform", "translate(" + [w, 0] + ")")
                                .attr("transform", "rotate(-90)")
                                .attr("y", w + 50)
                                .text("Percentage");

                        }
                        else {
                            $("#daywise_chart").empty();
                            var div_width = 400;
                            var div_height = 400;
                            var svg = d3.select("#daywise_chart").append("svg")
                                .attr("width", div_width)
                                .attr("height", div_height)
                                .attr("preserveAspectRatio", "xMidYMid")
                                .append("g")
                                .attr("transform", "translate(" + (div_width / 2 - 50) + "," + (div_height / 2 - 50) + ")");

                            svg.append("text")
                                .text("No Data Available")
                                .style("font-size", "40px");
                        }
                    },
                    error: function (response) {
                        if (response.status == "401") {
                            swal({
                                icon: "warning",
                                title: "Session Expired",
                                button: true,
                                closeModal: false
                            })
                            window.location = R_url;
                        }
                        else {
                            swal({
                                icon: "warning",
                                title: "Something went wrong",
                                button: true,
                                closeModal: false
                            })

                        }
                    }
                });
            }
        }
    });

</script>

<script type="text/javascript">
    function exportTableToExcel(tableID, filename = '') {
        var downloadLink;
        var dataType = 'application/vnd.ms-excel';
        var tableSelect = document.getElementById(tableID);
        var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

        // Specify file name
        filename = filename ? filename + '.xls' : 'excel_data.xls';

        // Create download link element
        downloadLink = document.createElement("a");

        document.body.appendChild(downloadLink);

        if (navigator.msSaveOrOpenBlob) {
            var blob = new Blob(['\ufeff', tableHTML], {
                type: dataType
            });
            navigator.msSaveOrOpenBlob(blob, filename);
        } else {
            // Create a link to the file
            downloadLink.href = 'data:' + dataType + ', ' + tableHTML;

            // Setting the file name
            downloadLink.download = filename;

            //triggering the function
            downloadLink.click();
        }
    }
</script>
